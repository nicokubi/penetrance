library(clipp)
library(survival)
library(plyr) # need to load plyr before dplyr
library(truncnorm)
library(PanelPRO)
library(tidyverse)
library(stringr)
library(PedUtils)
library(survival)
library(MASS)
library(profvis)
library(survminer)
library(ggridges)
library(ggplot2)
library(dplyr)
library(kinship2)
library(penetrance)

#Â Data
dat <- load("/Users/nicolaskubista/Dropbox (Partners HealthCare)/CCGCRN Hispanic Cohort Data/PenEstim/Data/carrierProbandFamilies_cohPedigree_MLH1.RData")
dat <- dat_adjusted

# Assuming your list of data frames is called `df_list`
combined_df <- do.call(rbind, dat)
summary(combined_df)

for (i in seq_along(dat)) {
  if ("ID" %in% colnames(dat[[i]])) {
    colnames(dat[[i]])[colnames(dat[[i]]) == "PedigreeID"] <- "FamilyID"
  }
}

for (i in seq_along(dat)) {
  # Add a new column "PedigreeID" with the list number
  dat[[i]]$PedigreeID <- i
}

# Change "isAffCOL" to "isAff" if "isAffCOL" is a column
for (i in seq_along(dat)) {
  if ("isAffCOL" %in% colnames(dat[[i]])) {
    colnames(dat[[i]])[colnames(dat[[i]]) == "isAffCOL"] <- "isAff"
  }
}

for (i in seq_along(dat)) {
  if ("AgeCOL" %in% colnames(dat[[i]])) {
    colnames(dat[[i]])[colnames(dat[[i]]) == "AgeCOL"] <- "Age"
  }
}

for (i in seq_along(dat)) {
  if ("MLH1" %in% colnames(dat[[i]])) {
    colnames(dat[[i]])[colnames(dat[[i]]) == "MLH1"] <- "geno"
  }
}

data <- do.call(rbind, lapply(dat, transformDF))

head(data)
summary(data)
data_female_affected$age

# Exploring different priors
prior_params <- list(
  asymptote = list(g1 = 1, g2 = 1),
  threshold = list(min = 5, max = 40),
  median = list(m1 = 1, m2 = 1),
  first_quartile = list(q1 = 1, q2 = 1)
)

# Run Estimation procedure with default prior setting 
# Main Estimation for Female
system.time(out_sim_COL_vTest1 <- PenEstim(
    pedigree  = dat, n_chains = 1, n_iter_per_chain = 10, af = PPP::PanelPRODatabase$AlleleFrequency[paste0("PALB2", "_anyPV"), "nonAJ"],
 ageImputation = TRUE, twins = NULL,
    prior_params = prior_params, burn_in = 0.1, median_max = TRUE
))


out_sim_COL_vTest1$combined_chains

# Prop 
prop <- makePriors(
  data = NULL,
  sample_size = NULL,
  cancer = "Colorectal",
  ratio = NULL,
  prior_params = prior_params_default,
  risk_proportion = risk_proportion_default
)


# adapt baseline for no sex
base_single <- rowMeans(baseline_data_default[,2:3])
base_single

set.seed(2222)

system.time(out25 <-mhChain(
  seed =999, n_iter=9, burn_in = 0.1, chain_id=2, data=data, ncores = 4, twins = NULL,
  max_age= 94, af = PPP::PanelPRODatabase$AlleleFrequency[paste0("MLH1", "_anyPV"), "nonAJ"],
  baseline_data =  baseline_data_default,
  prior_distributions = prop, remove_proband = TRUE, sex_specific = TRUE, imp_interval = 3,
  median_max = TRUE, max_penetrance = 1, age_imputation = TRUE, BaselineNC  = TRUE, var = c(0.1,0.1,2, 2, 5, 5,5,5)))


warout25
out25$summary_stats
plot_traceSingle(out25$results[[1]])
plot_penetrance(out25$combined_chains, prob = 0.95, max_age = 94,"Female",2.5,50,0,1)

#Main Estimation for no sex
system.time(out_1 <- penetrance(
  pedigree  = dat_adjusted, twins = NULL, n_chains = 1, n_iter_per_chain = 10, 
  ncores = 6, baseline_data = baseline_data_default , 
  af  = PPP::PanelPRODatabase$AlleleFrequency[paste0("TP53", "_anyPV"), "nonAJ"],  imp_interval = 3,
  prior_params = prior_params_default, burn_in = 0.1, median_max = TRUE, BaselineNC = FALSE,
  age_imputation = TRUE, remove_proband = FALSE, var = c(0.1,0.1,2, 2,5, 5,5,5), sex_specific = TRUE
))
