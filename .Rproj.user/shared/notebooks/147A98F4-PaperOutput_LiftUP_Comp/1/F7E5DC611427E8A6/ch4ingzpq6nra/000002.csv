"0","# ---- 5. Plot: CUMULATIVE vs. SEER ----"
"0","#        We'll rename it for clarity: 'plot_penetrance_comparison_cumulative'"
"0","#        This uses the pweibull(...) approach (CDF)."
"0",""
"0","plot_penetrance_comparison_cumulative <- function(data, "
"0","                                                  data_noImp, "
"0","                                                  db_sim, "
"0","                                                  prob, "
"0","                                                  max_age, "
"0","                                                  cancer, "
"0","                                                  gene, "
"0","                                                  sex, "
"0","                                                  race, "
"0","                                                  type,"
"0","                                                  competing_method_incidence = NULL,"
"0","                                                  include_age_imputation = TRUE) {"
"0","  # Helper function to calculate cumulative distributions"
"0","  calc_cumulative_mcmc <- function(data, sex) {"
"0","    params <- if (sex == ""Male"") {"
"0","      calculate_weibull_parameters("
"0","        data$median_male_results,"
"0","        data$first_quartile_male_results,"
"0","        data$threshold_male_results"
"0","      )"
"0","    } else {"
"0","      calculate_weibull_parameters("
"0","        data$median_female_results,"
"0","        data$first_quartile_female_results,"
"0","        data$threshold_female_results"
"0","      )"
"0","    }"
"0","    "
"0","    alpha <- params$alpha"
"0","    beta <- params$beta"
"0","    threshold <- if (sex == ""Male"") data$threshold_male_results else data$threshold_female_results"
"0","    asymptote <- if (sex == ""Male"") data$asymptote_male_results else data$asymptote_female_results"
"0","    "
"0","    x_values <- seq(1, max_age)"
"0","    mapply(function(a, b, th, asy) {"
"0","      pweibull(x_values - th, shape = a, scale = b) * asy"
"0","    }, alpha, beta, threshold, asymptote, SIMPLIFY = FALSE)"
"0","  }"
"0",""
"0","  # Calculate cumulative distributions for both datasets"
"0","  distr_list <- calc_cumulative_mcmc(data, sex)"
"0","  distr_mat <- matrix(unlist(distr_list), nrow = length(seq(1, max_age)), byrow = FALSE)"
"0","  "
"0","  distr_list_noImp <- calc_cumulative_mcmc(data_noImp, sex)"
"0","  distr_mat_noImp <- matrix(unlist(distr_list_noImp), nrow = length(seq(1, max_age)), byrow = FALSE)"
"0",""
"0","  mean_distr <- rowMeans(distr_mat, na.rm = TRUE)"
"0","  mean_distr_noImp <- rowMeans(distr_mat_noImp, na.rm = TRUE)"
"0","  "
"0","  lower_prob <- (1 - prob) / 2"
"0","  upper_prob <- 1 - lower_prob"
"0",""
"0","  lower_ci <- apply(distr_mat, 1, quantile, probs = lower_prob, na.rm = TRUE)"
"0","  upper_ci <- apply(distr_mat, 1, quantile, probs = upper_prob, na.rm = TRUE)"
"0","  "
"0","  lower_ci_noImp <- apply(distr_mat_noImp, 1, quantile, probs = lower_prob, na.rm = TRUE)"
"0","  upper_ci_noImp <- apply(distr_mat_noImp, 1, quantile, probs = upper_prob, na.rm = TRUE)"
"0",""
"0","  # Retrieve SEER data"
"0","  dim_names <- attr(db_sim$Penetrance, ""dimnames"")"
"0","  c_idx <- which(dim_names[[1]] == cancer)"
"0","  g_idx <- which(dim_names[[2]] == gene)"
"0","  r_idx <- which(dim_names[[3]] == race)"
"0","  s_idx <- which(dim_names[[4]] == sex)"
"0","  t_idx <- which(dim_names[[6]] == type)"
"0",""
"0","  seer_density <- db_sim$Penetrance[c_idx, g_idx, r_idx, s_idx, , t_idx]"
"0","  seer_cum <- cumsum(seer_density)"
"0",""
"0","  age_values <- seq_along(seer_density)"
"0","  min_length <- min(length(seer_cum), length(mean_distr))"
"0",""
"0","  # Dataframe for plotting"
"0","  df <- data.frame("
"0","    age = age_values[1:min_length],"
"0","    seer_cum = seer_cum[1:min_length],"
"0","    mean_distr = mean_distr[1:min_length],"
"0","    mean_distr_noImp = mean_distr_noImp[1:min_length],"
"0","    lower_ci = lower_ci[1:min_length],"
"0","    upper_ci = upper_ci[1:min_length],"
"0","    lower_ci_noImp = lower_ci_noImp[1:min_length],"
"0","    upper_ci_noImp = upper_ci_noImp[1:min_length]"
"0","  )"
"0",""
"0","  # Plot"
"0","  p <- ggplot(df, aes(x = age)) +"
"0","    geom_line(aes(y = seer_cum, color = ""SEER Baseline""), "
"0","              linewidth = 1, linetype = ""solid"", na.rm = TRUE) +"
"0","    geom_line(aes(y = mean_distr, color = ""PGV - With Age Imputation""), "
"0","              linewidth = 1, linetype = ""dotted"", na.rm = TRUE) +"
"0","    geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci),"
"0","                alpha = 0.2, fill = ""red"", na.rm = TRUE) +"
"0","    geom_line(aes(y = mean_distr_noImp, color = ""PGV - No Age Imputation""), "
"0","              linewidth = 1, linetype = ""dashed"", na.rm = TRUE) +"
"0","    geom_ribbon(aes(ymin = lower_ci_noImp, ymax = upper_ci_noImp),"
"0","                alpha = 0.2, fill = ""blue"", na.rm = TRUE) +"
"0","    labs(title = paste(""Cumulative Density Comparison for"", sex, ""in"", race),"
"0","         x = ""Age"","
"0","         y = ""Cumulative Density"") +"
"0","    theme_minimal() +"
"0","    scale_color_manual(values = c("
"0","      ""SEER Baseline"" = ""black"","
"0","      ""PGV - With Age Imputation"" = ""red"","
"0","      ""PGV - No Age Imputation"" = ""blue"""
"0","    )) +"
"0","    theme(legend.title = element_blank(),"
"0","          legend.position = ""top"")"
"0",""
"0","  # Overlay competing method if provided"
"0","  if (!is.null(competing_method_incidence)) {"
"0","    comp_len <- min(length(seq(1, max_age)), length(competing_method_incidence))"
"0","    comp_cum <- cumsum(competing_method_incidence[1:comp_len])"
"0",""
"0","    comp_df <- data.frame("
"0","      age = seq(1, max_age)[1:comp_len],"
"0","      compcum = comp_cum"
"0","    )"
"0",""
"0","    p <- p + "
"0","      geom_line(data = comp_df, aes(x = age, y = compcum, color = ""Competing Method""),"
"0","                linewidth = 1, linetype = ""dotdash"") +"
"0","      scale_color_manual(values = c("
"0","        ""SEER Baseline"" = ""black"","
"0","        ""PGV - With Age Imputation"" = ""red"","
"0","        ""PGV - No Age Imputation"" = ""blue"","
"0","        ""Competing Method"" = ""green4"""
"0","      ))"
"0","  }"
"0",""
"0","  print(p)"
"0","}"
"0",""
"0",""
