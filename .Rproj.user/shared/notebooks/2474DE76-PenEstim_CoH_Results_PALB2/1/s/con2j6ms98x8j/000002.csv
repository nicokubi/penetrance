"0",""
"0","#Â Data Preperation in the right format"
"0","for (i in seq_along(dat)) {"
"0","  if (""ID"" %in% colnames(dat[[i]])) {"
"0","    colnames(dat[[i]])[colnames(dat[[i]]) == ""PedigreeID""] <- ""FamilyID"""
"0","  }"
"0","}"
"0","for (i in seq_along(dat)) {"
"0","  # Add a new column ""PedigreeID"" with the list number"
"0","  dat[[i]]$PedigreeID <- i"
"0","}"
"0","# Change ""isAffCOL"" to ""isAff"" if ""isAffCOL"" is a column"
"0","for (i in seq_along(dat)) {"
"0","  if (""isAffBC"" %in% colnames(dat[[i]])) {"
"0","    colnames(dat[[i]])[colnames(dat[[i]]) == ""isAffBC""] <- ""isAff"""
"0","  }"
"0","}"
"0","for (i in seq_along(dat)) {"
"0","  if (""AgeBC"" %in% colnames(dat[[i]])) {"
"0","    colnames(dat[[i]])[colnames(dat[[i]]) == ""AgeBC""] <- ""Age"""
"0","  }"
"0","}"
"0","for (i in seq_along(dat)) {"
"0","  if (""PALB2"" %in% colnames(dat[[i]])) {"
"0","    colnames(dat[[i]])[colnames(dat[[i]]) == ""PALB2""] <- ""geno"""
"0","  }"
"0","}"
"0",""
"0","# Use the SEER baseline"
"0","baseline <- PPP::PanelPRODatabase$Penetrance[""Breast"",""SEER"",""All_Races"",,,""Net""]"
"0",""
"0","# Adjust Format"
"0","baseline_df <- as.data.frame(t(baseline))"
"0","colnames(baseline_df) <- c(""Female"", ""Male"")"
"0",""
"0","# Add Age column"
"0","baseline_df$Age <- as.numeric(rownames(baseline_df))"
"0",""
"0","# Reorder columns to include Age"
"0","baseline_df <- baseline_df[, c(""Age"", ""Female"", ""Male"")]"
"0",""
"0",""
"0"," #Run Estimation procedure with default prior setting "
"0","system.time(out_BC_PALB2_v1 <- penetrance("
"0","    pedigree  = dat, twins = NULL,n_chains = 1, n_iter_per_chain = 20000, ncores = 6, baseline_data = baseline_df , af  = PPP::PanelPRODatabase$AlleleFrequency[paste0(""PALB2"", ""_anyPV""), ""nonAJ""], "
"0","    prior_params = prior_params_default, burn_in = 0.1, median_max = TRUE,  age_imputation = FALSE, remove_proband = TRUE"
"0","))"
