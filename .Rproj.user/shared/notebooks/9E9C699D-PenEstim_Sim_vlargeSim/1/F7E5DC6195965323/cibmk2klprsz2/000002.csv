"0","# load data"
"0","# Generate Families"
"0","numberFamilies <- 6000  # Set number of families to be generated"
"0","families_MLH1 <- list()  # Initialize list for families data"
"0","probandIDS = c()"
"0","probandMLH1Status = c()"
"0","probandAffectionStatus = c()"
"0",""
"0","# Set up age sequence as in the PanelPRO database"
"0","age <- 1:94"
"0",""
"0","# use same BRCA1 frequency (not estimated)"
"0","MLH1freq <- 0.2"
"0","PanelPRODatabase$AlleleFrequency[[""MLH1_anyPV"",1]] <- MLH1freq"
"0","PanelPRODatabase$AlleleFrequency[[""MLH1_anyPV"",2]] <- MLH1freq"
"0","PanelPRODatabase$AlleleFrequency[[""MLH1_anyPV"",3]] <- MLH1freq"
"0",""
"0","# Given mean and variance"
"0","alpha <- 2 # Replace with the value you have"
"0","beta  <- 50 # Replace with the value you have"
"0","gamma <- 0.6"
"0","delta <-  15"
"0",""
"0","# Now use alpha and beta in your simulation"
"0","penetrance.mod.f <- dweibull(age - delta, alpha, beta) * gamma"
"0",""
"0","# For now focus on just one vector of penetrance estimates"
"0","gene <- ""MLH1_hetero_anyPV"""
"0","cancer <- ""Colorectal"""
"0","race <- ""All_Races"""
"0","sex <- ""Female"""
"0","type <- ""Net"""
"0",""
"0","# Find the indices for the resp. attributes "
"0","dim_names <- attr(PanelPRODatabase$Penetrance, ""dimnames"")"
"0","gene_index <- which(dim_names$Gene == gene)"
"0","cancer_index <- which(dim_names$Cancer == cancer)"
"0","race_index <- which(dim_names$Race == race)"
"0","sex_index <- which(dim_names$Sex == sex)"
"0","type_index <- which(dim_names$PenetType == type)"
"0",""
"0","# Overwrite the penetetrane for all races, geneders and races"
"0","PanelPRODatabase$Penetrance[cancer_index, gene_index, race_index, sex_index , ,]<- penetrance.mod.f"
"0",""
"0","# Given mean and variance"
"0","alpha <- 2 # Replace with the value you have"
"0","beta  <- 50 # Replace with the value you have"
"0","gamma <- 0.6"
"0","delta <- 30"
"0",""
"0","# Now use alpha and beta in your simulation"
"0","penetrance.mod.m <- dweibull(age - delta, alpha, beta) * gamma"
"0",""
"0","# For now focus on just one vector of penetrance estimates"
"0","gene <- ""MLH1_hetero_anyPV"""
"0","cancer <- ""Colorectal"""
"0","race <- ""All_Races"""
"0","sex <- ""Male"""
"0","type <- ""Net"""
"0",""
"0","# Find the indices for the resp. attributes "
"0","dim_names <- attr(PanelPRODatabase$Penetrance, ""dimnames"")"
"0","gene_index <- which(dim_names$Gene == gene)"
"0","cancer_index <- which(dim_names$Cancer == cancer)"
"0","race_index <- which(dim_names$Race == race)"
"0","sex_index <- which(dim_names$Sex == sex)"
"0","type_index <- which(dim_names$PenetType == type)"
"0",""
"0","# Overwrite the penetetrane for all races, geneders and races"
"0","PanelPRODatabase$Penetrance[cancer_index, gene_index, race_index, sex_index , ,]<- penetrance.mod.m"
"0","  "
"0","# Simulation"
"0"," suppressMessages(suppressWarnings(capture.output(for(i in 1:numberFamilies){"
"0","  # Cancers"
"0","  cancers = ""Colorectal"""
"0","  # Genes"
"0","  genes = ""MLH1"""
"0","  #family members"
"0","  # Paternal aunts, paternal uncles"
"0","  nSibsPatern =floor(rtruncnorm(n=2, mean=1, 3))"
"0","  # Maternal aunts, maternal uncles"
"0","  nSibsMatern = floor(rtruncnorm(n=2, mean=1, 3))"
"0","  # Sisters and brothers"
"0","  nSibs = floor(rtruncnorm(n=2, mean=1, 1))"
"0","  # We make the assumption that the number of sons and daughters for the"
"0","  # proband and all siblings, is the same. Nieces and nephews of the proband"
"0","  # are not sampled separately1"
"0","  nGrandchild = floor(rtruncnorm(n=2, mean=0, 1))"
"0","  nChild = floor(rtruncnorm(n=2, mean=1, 1))"
"0","  "
"0","  # Simulate family using `PedUtils` code"
"0","  fam = sim.runSimFam(nSibsPatern, nSibsMatern, nSibs, nChild,"
"0","                      PanelPRODatabase, genes, cancers,"
"0","                      includeGeno = TRUE, includeBiomarkers = FALSE, "
"0","                      censoring = TRUE)"
"0","  "
"0","  famDF = as.data.frame(fam)"
"0","  proband = famDF %>% filter(isProband==1)"
"0","  probandIDS = c(probandIDS, proband$ID)"
"0","  probandMLH1Status = c(probandMLH1Status, proband$MLH1)"
"0","  probandAffectionStatus = c(probandAffectionStatus, proband$isAffCOL)"
"0","  families_MLH1[[i]] = famDF"
"0","  "
"0","})))"
"0",""
"0","save(families_MLH1, file = ""families_MLH1.RData"")"
"0","# Filter families with affected probands"
"0","carrierProbandfamilies_MLH1 <- Filter(function(fam) "
"0","  any(fam$isProband == 1 & fam$MLH1 == 1), families_MLH1)"
"0",""
"0",""
"0","# hide genotype information for everyone but the proband"
"0","simFamiliesGeno <- function(fams) {"
"0","  "
"0","  simFamilies <- list()"
"0","  # Assuming you have the original list of families stored as `original_families`"
"0","  # and a vector of proband IDs called `proband_ids`"
"0","  for (i in 1:length(fams)) {"
"0","    family <- fams[[i]]"
"0","    proband <-  family %>% filter(isProband==1)"
"0","    family$MLH1 <- ifelse(family$ID == proband$ID, family$MLH1, NA)"
"0","    simFamilies[[i]] <- family"
"0","  }"
"0","  return(simFamilies)"
"0","}"
"0",""
"0","simfamilies_MLH1_weibull <- simFamiliesGeno(carrierProbandfamilies_MLH1)"
"0",""
"0","# Select 130.2 families at random"
"0","selected_families_weibull_large <- simfamilies_MLH1_weibull"
"0","save(selected_families_weibull_large, file = ""selected_families_weibull_large.RData"")"
"0",""
"0","# Analysis"
"0","describeFamilies(selected_families_weibull_large, ""Colorectal"", ""MLH1"")"
"2","Error in describeFamilies(selected_families_weibull_large, ""Colorectal"",  : 
  unused arguments (""Colorectal"", ""MLH1"")
"
