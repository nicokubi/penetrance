"0","# Function to calculate Weibull parameters"
"0","calculate_weibull_parameters <- function(given_median, given_first_quartile, delta) {"
"0","    # Calculate alpha"
"0","    alpha <- log(-log(0.5) / -log(0.75)) / log((given_median - delta) / (given_first_quartile - delta))"
"0",""
"0","    # Calculate beta using the median (M)"
"0","    beta <- (given_median - delta) / (-log(0.5))^(1 / alpha)"
"0",""
"0","    return(list(alpha = alpha, beta = beta))"
"0","}"
"0",""
"0","# Function to calculate Weibull probability density"
"0","weibull_pdf <- function(x, alpha, beta, threshold, asymptote) {"
"0","  dweibull(x - threshold, shape = alpha, scale = beta) * asymptote"
"0","}"
"0",""
"0","# Function to plot the penetrance and compare with Panelpro Database"
"0","plot_penetrance_comparison <- function(data, data_noImp, db_sim, prob, max_age, cancer, gene, sex, race, type) {"
"0","  if (prob <= 0 || prob >= 1) {"
"0","    stop(""prob must be between 0 and 1"")"
"0","  }"
"0",""
"0","  # Calculate densities for both datasets"
"0","  calculate_densities <- function(data, sex) {"
"0","    params <- if (sex == ""Male"") {"
"0","      calculate_weibull_parameters("
"0","        data$median_male_results,"
"0","        data$first_quartile_male_results,"
"0","        data$threshold_male_results"
"0","      )"
"0","    } else {"
"0","      calculate_weibull_parameters("
"0","        data$median_female_results,"
"0","        data$first_quartile_female_results,"
"0","        data$threshold_female_results"
"0","      )"
"0","    }"
"0","    "
"0","    alphas <- params$alpha"
"0","    betas <- params$beta"
"0","    thresholds <- if (sex == ""Male"") data$threshold_male_results else data$threshold_female_results"
"0","    asymptotes <- if (sex == ""Male"") data$asymptote_male_results else data$asymptote_female_results"
"0","    "
"0","    mapply(function(alpha, beta, threshold, asymptote) {"
"0","      weibull_pdf(x_values, alpha, beta, threshold, asymptote)"
"0","    }, alphas, betas, thresholds, asymptotes, SIMPLIFY = FALSE)"
"0","  }"
"0",""
"0","  x_values <- seq(1, max_age)"
"0","  "
"0","  # Calculate for both datasets"
"0","  cumulative_density <- calculate_densities(data, sex)"
"0","  cumulative_density_noImp <- calculate_densities(data_noImp, sex)"
"0",""
"0","  # Process matrices and calculate statistics"
"0","  distributions_matrix <- matrix(unlist(cumulative_density), nrow = length(x_values), byrow = FALSE)"
"0","  distributions_matrix_noImp <- matrix(unlist(cumulative_density_noImp), nrow = length(x_values), byrow = FALSE)"
"0","  "
"0","  mean_density <- rowMeans(distributions_matrix, na.rm = TRUE)"
"0","  mean_density_noImp <- rowMeans(distributions_matrix_noImp, na.rm = TRUE)"
"0",""
"0","  # Calculate credible intervals for both"
"0","  lower_prob <- (1 - prob) / 2"
"0","  upper_prob <- 1 - lower_prob"
"0","  "
"0","  lower_ci <- apply(distributions_matrix, 1, quantile, probs = lower_prob)"
"0","  upper_ci <- apply(distributions_matrix, 1, quantile, probs = upper_prob)"
"0","  "
"0","  lower_ci_noImp <- apply(distributions_matrix_noImp, 1, quantile, probs = lower_prob)"
"0","  upper_ci_noImp <- apply(distributions_matrix_noImp, 1, quantile, probs = upper_prob)"
"0",""
"0","  # Get SEER data"
"0","  dim_names <- attr(db_sim$Penetrance, ""dimnames"")"
"0","  cancer_index <- which(dim_names[[1]] == cancer)"
"0","  gene_index <- which(dim_names[[2]] == gene)"
"0","  race_index <- which(dim_names[[3]] == race)"
"0","  sex_index <- which(dim_names[[4]] == sex)"
"0","  type_index <- which(dim_names[[6]] == type)"
"0",""
"0","  density_data <- db_sim$Penetrance[cancer_index, gene_index, race_index, sex_index, , type_index]"
"0",""
"0","  # Create plotting dataframe"
"0","  age_values <- seq_along(density_data)"
"0","  min_length <- min(length(density_data), length(mean_density))"
"0",""
"0","  plot_df <- data.frame("
"0","    age = age_values[1:min_length],"
"0","    panelpro_density = density_data[1:min_length],"
"0","    mean_density = mean_density[1:min_length],"
"0","    mean_density_noImp = mean_density_noImp[1:min_length],"
"0","    lower_ci = lower_ci[1:min_length],"
"0","    upper_ci = upper_ci[1:min_length],"
"0","    lower_ci_noImp = lower_ci_noImp[1:min_length],"
"0","    upper_ci_noImp = upper_ci_noImp[1:min_length]"
"0","  )"
"0",""
"0","  # Create plot with both datasets"
"0","  ggplot(plot_df, aes(x = age)) +"
"0","    # SEER baseline"
"0","    geom_line(aes(y = panelpro_density, color = ""SEER Baseline""), "
"0","              linewidth = 1, linetype = ""solid"", na.rm = TRUE) +"
"0","    # With age imputation"
"0","    geom_line(aes(y = mean_density, color = ""PGV Carriers - With Cancer Age Imputation""), "
"0","              linewidth = 1, linetype = ""dotted"", na.rm = TRUE) +"
"0","    geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), "
"0","                alpha = 0.2, fill = ""red"", na.rm = TRUE) +"
"0","    # Without age imputation"
"0","    geom_line(aes(y = mean_density_noImp, color = ""PGV Carriers - No Cancer Age Imputation""), "
"0","              linewidth = 1, linetype = ""dashed"", na.rm = TRUE) +"
"0","    geom_ribbon(aes(ymin = lower_ci_noImp, ymax = upper_ci_noImp), "
"0","                alpha = 0.2, fill = ""blue"", na.rm = TRUE) +"
"0","    labs(title = paste(""Density Comparison for"", sex, ""in"", race),"
"0","         x = ""Age"","
"0","         y = ""Density"") +"
"0","    theme_minimal() +"
"0","    scale_color_manual(values = c("
"0","      ""SEER Baseline"" = ""black"","
"0","      ""PGV Carriers - With Cancer Age Imputation"" = ""red"","
"0","      ""PGV Carriers - No Cancer Age Imputation"" = ""blue"""
"0","    )) +"
"0","    scale_y_continuous(labels = scales::percent, limits = c(0, 0.003)) +  # Set y-axis limits to 15%"
"0","    theme(legend.title = element_blank(),"
"0","          legend.position = ""top"")"
"0","}"
"0",""
"0","# Update the plot calls to include dat_noImp"
"0","plot_penetrance_comparison("
"0","  data = dat$combined_chains,"
"0","  data_noImp = dat_noImp$combined_chains,"
"0","  db_sim = PanelPRODatabase,"
"0","  prob = 0.95,"
"0","  max_age = 94,"
"0","  cancer = ""Colorectal"","
"0","  gene = ""SEER"","
"0","  sex = ""Female"","
"0","  race = ""All_Races"","
"0","  type = ""Net"""
"0",")"
