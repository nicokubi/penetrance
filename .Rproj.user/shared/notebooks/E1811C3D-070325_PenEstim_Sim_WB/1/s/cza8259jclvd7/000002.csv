"0","# Function to create a parametric penetrance curve from MCMC parameters using Weibull"
"0"," generate_penetrance_curve <- function(asymptote, threshold, median, first_quartile, max_age = 100) {"
"0","   # Ages for evaluation"
"0","   ages <- 1:max_age"
"0",""
"0","   # Use the Weibull parameter calculation function"
"0","   weibull_params <- calculate_weibull_parameters(median, first_quartile, threshold)"
"0","   alpha <- weibull_params$alpha"
"0","   beta <- weibull_params$beta"
"0",""
"0","   # Generate penetrance values using Weibull CDF"
"0","   penetrance <- asymptote * pweibull(ages - threshold, shape = alpha, scale = beta)"
"0",""
"0","   # Zero penetrance before threshold"
"0","   penetrance[ages <= threshold] <- 0"
"0",""
"0","   return(penetrance)"
"0"," }"
"0","# 1. First extract the original data-generating parameters"
"0","# These were defined in the setup chunk"
"0","original_params <- list("
"0","  female = list("
"0","    alpha = alpha_f,    # Shape parameter = 2"
"0","    beta = beta_f,      # Scale parameter = 50"
"0","    gamma = gamma_f,    # Maximum penetrance = 0.6"
"0","    delta = delta_f     # Shift parameter = 15"
"0","  ),"
"0","  male = list("
"0","    alpha = alpha_m,    # Shape parameter = 2"
"0","    beta = beta_m,      # Scale parameter = 50"
"0","    gamma = gamma_m,    # Maximum penetrance = 0.9"
"0","    delta = delta_m     # Shift parameter = 30"
"0","  )"
"0",")"
"0",""
"0","# 2. Ensure we're using the correct penetrance calculation function"
"0","# This should match exactly how the original penetrance values were generated"
"0","calculate_penetrance <- function(age, alpha, beta, gamma, delta) {"
"0","  penetrance <- rep(0, length(age))"
"0","  valid_idx <- age > delta"
"0","  penetrance[valid_idx] <- dweibull(age[valid_idx] - delta, alpha, beta) * gamma"
"0","  return(penetrance)"
"0","}"
"0",""
"0","# 3. Calculate the true cumulative penetrance"
"0","calculate_cumulative_penetrance <- function(age, alpha, beta, gamma, delta) {"
"0","  penetrance <- calculate_penetrance(age, alpha, beta, gamma, delta)"
"0","  cumulative <- cumsum(penetrance)"
"0","  return(cumulative)"
"0","}"
"0",""
"0","# 4. Define age range for evaluation"
"0","age <- 1:94"
"0",""
"0","# 5. Generate the true penetrance curves"
"0","true_female_pen <- calculate_cumulative_penetrance("
"0","  age, "
"0","  original_params$female$alpha,"
"0","  original_params$female$beta,"
"0","  original_params$female$gamma,"
"0","  original_params$female$delta"
"0",")"
"0",""
"0","true_male_pen <- calculate_cumulative_penetrance("
"0","  age, "
"0","  original_params$male$alpha,"
"0","  original_params$male$beta,"
"0","  original_params$male$gamma,"
"0","  original_params$male$delta"
"0",")"
"0",""
"0","# 6. Create data frame with true penetrance"
"0","true_pen_df <- data.frame("
"0","  Age = age,"
"0","  Female_True = true_female_pen,"
"0","  Male_True = true_male_pen"
"0",")"
"0","# Define sample sizes"
"0","sample_sizes <- c(400, 1000)"
"0",""
"0","# Function to extract parameter estimates and credible intervals from a result object"
"0","extract_parameters <- function(result_obj) {"
"0","  if (is.null(result_obj)) return(NULL)"
"0","  "
"0","  # Try to extract from combined_chains"
"0","  if (!is.null(result_obj$combined_chains)) {"
"0","    chains <- result_obj$combined_chains"
"0","    "
"0","    # Extract median values of parameters (from last 20% of MCMC samples for stability)"
"0","    n_samples <- length(chains$asymptote_male_results)"
"0","    start_idx <- floor(n_samples * 0.8)"
"0","    "
"0","    # Extract median estimates"
"0","    params <- list("
"0","      asymptote_male = median(chains$asymptote_male_results[start_idx:n_samples]),"
"0","      asymptote_female = median(chains$asymptote_female_results[start_idx:n_samples]),"
"0","      threshold_male = median(chains$threshold_male_results[start_idx:n_samples]),"
"0","      threshold_female = median(chains$threshold_female_results[start_idx:n_samples]),"
"0","      median_male = median(chains$median_male_results[start_idx:n_samples]),"
"0","      median_female = median(chains$median_female_results[start_idx:n_samples]),"
"0","      first_quartile_male = median(chains$first_quartile_male_results[start_idx:n_samples]),"
"0","      first_quartile_female = median(chains$first_quartile_female_results[start_idx:n_samples])"
"0","    )"
"0","    "
"0","    # Extract 95% credible intervals"
"0","    params$asymptote_male_lower <- quantile(chains$asymptote_male_results[start_idx:n_samples], 0.025)"
"0","    params$asymptote_male_upper <- quantile(chains$asymptote_male_results[start_idx:n_samples], 0.975)"
"0","    params$asymptote_female_lower <- quantile(chains$asymptote_female_results[start_idx:n_samples], 0.025)"
"0","    params$asymptote_female_upper <- quantile(chains$asymptote_female_results[start_idx:n_samples], 0.975)"
"0","    "
"0","    params$threshold_male_lower <- quantile(chains$threshold_male_results[start_idx:n_samples], 0.025)"
"0","    params$threshold_male_upper <- quantile(chains$threshold_male_results[start_idx:n_samples], 0.975)"
"0","    params$threshold_female_lower <- quantile(chains$threshold_female_results[start_idx:n_samples], 0.025)"
"0","    params$threshold_female_upper <- quantile(chains$threshold_female_results[start_idx:n_samples], 0.975)"
"0","    "
"0","    params$median_male_lower <- quantile(chains$median_male_results[start_idx:n_samples], 0.025)"
"0","    params$median_male_upper <- quantile(chains$median_male_results[start_idx:n_samples], 0.975)"
"0","    params$median_female_lower <- quantile(chains$median_female_results[start_idx:n_samples], 0.025)"
"0","    params$median_female_upper <- quantile(chains$median_female_results[start_idx:n_samples], 0.975)"
"0","    "
"0","    params$first_quartile_male_lower <- quantile(chains$first_quartile_male_results[start_idx:n_samples], 0.025)"
"0","    params$first_quartile_male_upper <- quantile(chains$first_quartile_male_results[start_idx:n_samples], 0.975)"
"0","    params$first_quartile_female_lower <- quantile(chains$first_quartile_female_results[start_idx:n_samples], 0.025)"
"0","    params$first_quartile_female_upper <- quantile(chains$first_quartile_female_results[start_idx:n_samples], 0.975)"
"0","    "
"0","    # Store raw samples for posterior visualization"
"0","    params$samples <- list("
"0","      asymptote_male = chains$asymptote_male_results[start_idx:n_samples],"
"0","      asymptote_female = chains$asymptote_female_results[start_idx:n_samples],"
"0","      threshold_male = chains$threshold_male_results[start_idx:n_samples],"
"0","      threshold_female = chains$threshold_female_results[start_idx:n_samples],"
"0","      median_male = chains$median_male_results[start_idx:n_samples],"
"0","      median_female = chains$median_female_results[start_idx:n_samples],"
"0","      first_quartile_male = chains$first_quartile_male_results[start_idx:n_samples],"
"0","      first_quartile_female = chains$first_quartile_female_results[start_idx:n_samples]"
"0","    )"
"0","    "
"0","    return(params)"
"0","  }"
"0","  "
"0","  # If combined_chains not available, try results component"
"0","  if (!is.null(result_obj$results) && length(result_obj$results) > 0 && is.list(result_obj$results[[1]])) {"
"0","    res <- result_obj$results[[1]]"
"0","    "
"0","    # Extract parameters if available"
"0","    n_samples <- length(res$asymptote_male_samples)"
"0","    start_idx <- floor(n_samples * 0.8)"
"0","    "
"0","    # Extract median estimates"
"0","    params <- list("
"0","      asymptote_male = median(res$asymptote_male_samples[start_idx:n_samples]),"
"0","      asymptote_female = median(res$asymptote_female_samples[start_idx:n_samples]),"
"0","      threshold_male = median(res$threshold_male_samples[start_idx:n_samples]),"
"0","      threshold_female = median(res$threshold_female_samples[start_idx:n_samples]),"
"0","      median_male = median(res$median_male_samples[start_idx:n_samples]),"
"0","      median_female = median(res$median_female_samples[start_idx:n_samples]),"
"0","      first_quartile_male = median(res$first_quartile_male_samples[start_idx:n_samples]),"
"0","      first_quartile_female = median(res$first_quartile_female_samples[start_idx:n_samples])"
"0","    )"
"0","    "
"0","    # Extract 95% credible intervals"
"0","    params$asymptote_male_lower <- quantile(res$asymptote_male_samples[start_idx:n_samples], 0.025)"
"0","    params$asymptote_male_upper <- quantile(res$asymptote_male_samples[start_idx:n_samples], 0.975)"
"0","    params$asymptote_female_lower <- quantile(res$asymptote_female_samples[start_idx:n_samples], 0.025)"
"0","    params$asymptote_female_upper <- quantile(res$asymptote_female_samples[start_idx:n_samples], 0.975)"
"0","    "
"0","    params$threshold_male_lower <- quantile(res$threshold_male_samples[start_idx:n_samples], 0.025)"
"0","    params$threshold_male_upper <- quantile(res$threshold_male_samples[start_idx:n_samples], 0.975)"
"0","    params$threshold_female_lower <- quantile(res$threshold_female_samples[start_idx:n_samples], 0.025)"
"0","    params$threshold_female_upper <- quantile(res$threshold_female_samples[start_idx:n_samples], 0.975)"
"0","    "
"0","    params$median_male_lower <- quantile(res$median_male_samples[start_idx:n_samples], 0.025)"
"0","    params$median_male_upper <- quantile(res$median_male_samples[start_idx:n_samples], 0.975)"
"0","    params$median_female_lower <- quantile(res$median_female_samples[start_idx:n_samples], 0.025)"
"0","    params$median_female_upper <- quantile(res$median_female_samples[start_idx:n_samples], 0.975)"
"0","    "
"0","    params$first_quartile_male_lower <- quantile(res$first_quartile_male_samples[start_idx:n_samples], 0.025)"
"0","    params$first_quartile_male_upper <- quantile(res$first_quartile_male_samples[start_idx:n_samples], 0.975)"
"0","    params$first_quartile_female_lower <- quantile(res$first_quartile_female_samples[start_idx:n_samples], 0.025)"
"0","    params$first_quartile_female_upper <- quantile(res$first_quartile_female_samples[start_idx:n_samples], 0.975)"
"0","    "
"0","    # Store raw samples for posterior visualization"
"0","    params$samples <- list("
"0","      asymptote_male = res$asymptote_male_samples[start_idx:n_samples],"
"0","      asymptote_female = res$asymptote_female_samples[start_idx:n_samples],"
"0","      threshold_male = res$threshold_male_samples[start_idx:n_samples],"
"0","      threshold_female = res$threshold_female_samples[start_idx:n_samples],"
"0","      median_male = res$median_male_samples[start_idx:n_samples],"
"0","      median_female = res$median_female_samples[start_idx:n_samples],"
"0","      first_quartile_male = res$first_quartile_male_samples[start_idx:n_samples],"
"0","      first_quartile_female = res$first_quartile_female_samples[start_idx:n_samples]"
"0","    )"
"0","    "
"0","    return(params)"
"0","  }"
"0","  "
"0","  return(NULL)"
"0","}"
"0",""
"0","# Load and extract parameters for each sample size"
"0","all_params <- list()"
"0","result_objs <- list()"
"0",""
"0","for (size in sample_sizes) {"
"0","  # Set up file path"
"0","  file_path <- file.path(results_dir, paste0(""out_sim_weibull_COL_MLH1_sim"", size, "".RData""))"
"0","  "
"0","  if (file.exists(file_path)) {"
"0","    # Load the result"
"0","    result_obj <- NULL"
"0","    tryCatch({"
"0","      load(file_path)"
"0",""
"0","# Use"
"0","      result_obj <- result  # Or whatever your actual object is named"
"0","      params <- extract_parameters(result_obj)"
"0","      "
"0","      if (!is.null(params)) {"
"0","        all_params[[paste0(""n"", size)]] <- params"
"0","        cat(""Extracted parameters for sample size"", size, ""\n"")"
"0","      } else {"
"0","        cat(""Could not extract parameters for sample size"", size, ""\n"")"
"0","      }"
"0","    }, error = function(e) {"
"0","      cat(""Error loading results for sample size"", size, "":"", e$message, ""\n"")"
"0","    })"
"0","  } else {"
"0","    cat(""File not found:"", file_path, ""\n"")"
"0","  }"
"0","}"
"1","Extracted parameters for sample size"
"1"," "
"1","400"
"1"," "
"1","
"
"1","Extracted parameters for sample size"
"1"," "
"1","1000"
"1"," "
"1","
"
"0","# Create parameter summary table"
"0","  param_df <- data.frame()"
"0","  "
"0","  for (name in names(all_params)) {"
"0","    params <- all_params[[name]]"
"0","    size <- as.numeric(gsub(""n"", """", name))"
"0","    "
"0","    new_row <- data.frame("
"0","      SampleSize = size,"
"0","      Asymptote_Male = params$asymptote_male,"
"0","      Asymptote_Male_Lower = params$asymptote_male_lower,"
"0","      Asymptote_Male_Upper = params$asymptote_male_upper,"
"0","      Asymptote_Female = params$asymptote_female,"
"0","      Asymptote_Female_Lower = params$asymptote_female_lower,"
"0","      Asymptote_Female_Upper = params$asymptote_female_upper,"
"0","      Threshold_Male = params$threshold_male,"
"0","      Threshold_Male_Lower = params$threshold_male_lower,"
"0","      Threshold_Male_Upper = params$threshold_male_upper,"
"0","      Threshold_Female = params$threshold_female,"
"0","      Threshold_Female_Lower = params$threshold_female_lower,"
"0","      Threshold_Female_Upper = params$threshold_female_upper,"
"0","      Median_Male = params$median_male,"
"0","      Median_Male_Lower = params$median_male_lower,"
"0","      Median_Male_Upper = params$median_male_upper,"
"0","      Median_Female = params$median_female,"
"0","      Median_Female_Lower = params$median_female_lower,"
"0","      Median_Female_Upper = params$median_female_upper,"
"0","      FirstQuartile_Male = params$first_quartile_male,"
"0","      FirstQuartile_Male_Lower = params$first_quartile_male_lower,"
"0","      FirstQuartile_Male_Upper = params$first_quartile_male_upper,"
"0","      FirstQuartile_Female = params$first_quartile_female,"
"0","      FirstQuartile_Female_Lower = params$first_quartile_female_lower,"
"0","      FirstQuartile_Female_Upper = params$first_quartile_female_upper"
"0","    )"
"0","    "
"0","    param_df <- rbind(param_df, new_row)"
"0","  }"
"0","  "
"0","  # Create a simplified parameter table for publication"
"0","  param_table_pub <- param_df %>%"
"0","    select(SampleSize, "
"0","           Asymptote_Male, Asymptote_Female, "
"0","           Threshold_Male, Threshold_Female,"
"0","           Median_Male, Median_Female,"
"0","           FirstQuartile_Male, FirstQuartile_Female)"
"0","  "
"0","  # Display table of parameters"
"0","  knitr::kable(param_table_pub, digits = 3, "
"0","              caption = ""Parameter Estimates by Sample Size"")"
