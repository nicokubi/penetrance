"0","  "
"0",""
"0","# Maximum age for evaluation"
"0","max_age <- min(length(true_female_pen), length(true_male_pen))"
"0",""
"0","# Create a data frame with the true penetrance curves"
"0","true_pen_df <- data.frame("
"0","  Age = 1:max_age,"
"0","  Female_True = true_female_pen[1:max_age],"
"0","  Male_True = true_male_pen[1:max_age]"
"0",")"
"0",""
"0","# Function to generate credible intervals for penetrance curves"
"0","generate_penetrance_curves_with_ci <- function(params, prob = 0.95, max_age = max_age) {"
"0","  ages <- 1:max_age"
"0","  n_samples <- length(params$samples$asymptote_female)"
"0","  "
"0","  # Initialize matrices to store penetrance values"
"0","  female_matrix <- matrix(0, nrow = max_age, ncol = n_samples)"
"0","  male_matrix <- matrix(0, nrow = max_age, ncol = n_samples)"
"0","  "
"0","  # Calculate penetrance for each MCMC sample"
"0","  for (i in 1:n_samples) {"
"0","    # Generate female curve for this sample"
"0","    female_matrix[, i] <- generate_penetrance_curve("
"0","      params$samples$asymptote_female[i],"
"0","      params$samples$threshold_female[i],"
"0","      params$samples$median_female[i],"
"0","      params$samples$first_quartile_female[i],"
"0","      max_age = max_age"
"0","    )"
"0","    "
"0","    # Generate male curve for this sample"
"0","    male_matrix[, i] <- generate_penetrance_curve("
"0","      params$samples$asymptote_male[i],"
"0","      params$samples$threshold_male[i],"
"0","      params$samples$median_male[i],"
"0","      params$samples$first_quartile_male[i],"
"0","      max_age = max_age"
"0","    )"
"0","  }"
"0","  "
"0","  # Calculate quantiles for each age"
"0","  alpha <- (1 - prob) / 2"
"0","  female_lower <- apply(female_matrix, 1, quantile, probs = alpha)"
"0","  female_upper <- apply(female_matrix, 1, quantile, probs = 1 - alpha)"
"0","  female_median <- apply(female_matrix, 1, median)"
"0","  "
"0","  male_lower <- apply(male_matrix, 1, quantile, probs = alpha)"
"0","  male_upper <- apply(male_matrix, 1, quantile, probs = 1 - alpha)"
"0","  male_median <- apply(male_matrix, 1, median)"
"0","  "
"0","  return(list("
"0","    female = list("
"0","      median = female_median,"
"0","      lower = female_lower,"
"0","      upper = female_upper"
"0","    ),"
"0","    male = list("
"0","      median = male_median,"
"0","      lower = male_lower,"
"0","      upper = male_upper"
"0","    )"
"0","  ))"
"0","}"
"0",""
"0","# Generate estimated penetrance curves for each sample size"
"0","estimated_curves <- list()"
"0","estimated_curves_with_ci <- list()"
"0",""
"0","for (name in names(all_params)) {"
"0","  params <- all_params[[name]]"
"0","  size <- as.numeric(gsub(""n"", """", name))"
"0","  "
"0","  # Generate estimated curves"
"0","  female_est <- generate_penetrance_curve("
"0","    params$samples$asymptote_female, "
"0","    params$samples$threshold_female, "
"0","    params$samples$median_female, "
"0","    params$samples$first_quartile_female,"
"0","    max_age = max_age"
"0","  )"
"0","  "
"0","  male_est <- generate_penetrance_curve("
"0","    params$samples$asymptote_male, "
"0","    params$samples$threshold_male, "
"0","    params$samples$median_male, "
"0","    params$samples$first_quartile_male,"
"0","    max_age = max_age"
"0","  )"
"0","  "
"0","  # Generate credible intervals for curves"
"0","  female_curves_with_ci <- generate_penetrance_curves_with_ci(params, prob = 0.95, max_age = max_age)"
"0","  male_curves_with_ci <- generate_penetrance_curves_with_ci(params, prob = 0.95, max_age = max_age)"
"0","  "
"0","  # Create data frame"
"0","  est_df <- data.frame("
"0","    Age = 1:max_age,"
"0","    Female_Est = female_curves_with_ci$female$median,"
"0","    Female_Lower = female_curves_with_ci$female$lower,"
"0","    Female_Upper = female_curves_with_ci$female$upper,"
"0","    Male_Est = male_curves_with_ci$male$median,"
"0","    Male_Lower = male_curves_with_ci$male$lower,"
"0","    Male_Upper = male_curves_with_ci$male$upper,"
"0","    SampleSize = size"
"0","  )"
"0","  "
"0","  estimated_curves[[name]] <- est_df"
"0","  estimated_curves_with_ci[[name]] <- list("
"0","    female = female_curves_with_ci,"
"0","    male = male_curves_with_ci"
"0","  )"
"0","}"
"2","Warning in ages - threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages <= threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages - threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages <= threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages - threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages <= threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages - threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"2","Warning in ages <= threshold :"
"2","
 "
"2"," longer object length is not a multiple of shorter object length
"
"0","# Combine all curves into one data frame"
"0","all_curves <- bind_rows(estimated_curves)"
"0",""
"0","# Merge with true penetrance"
"0","plot_data <- all_curves %>%"
"0","  merge(true_pen_df, by = ""Age"")"
"0",""
"0","# Create a function to plot comparison for a specific sample size - publication-ready version"
"0","# Modified plot function with proper legend and aesthetics"
"0","plot_comparison_publication <- function(data, size) {"
"0","  subset_data <- data %>% filter(SampleSize == size)"
"0",""
"0","  # Convert data to long format for better legend handling"
"0","  subset_data_long <- subset_data %>%"
"0","    tidyr::pivot_longer("
"0","      cols = c(Female_Est, Male_Est, Female_True, Male_True),"
"0","      names_to = c(""Sex"", ""Type""),"
"0","      names_pattern = ""(.*)_(.*)"","
"0","      values_to = ""Value"""
"0","    )"
"0",""
"0","  p <- ggplot() +"
"0","    # Add shaded credible intervals"
"0","    geom_ribbon("
"0","      data = subset_data,"
"0","      aes(x = Age, ymin = Female_Lower, ymax = Female_Upper, fill = ""Female""),"
"0","      alpha = 0.2"
"0","    ) +"
"0","    geom_ribbon("
"0","      data = subset_data,"
"0","      aes(x = Age, ymin = Male_Lower, ymax = Male_Upper, fill = ""Male""),"
"0","      alpha = 0.2"
"0","    ) +"
"0","    # Add curves with proper grouping for legend"
"0","    geom_line("
"0","      data = subset_data_long,"
"0","      aes("
"0","        x = Age, y = Value, color = Sex,"
"0","        linetype = Type, group = interaction(Sex, Type)"
"0","      )"
"0","    ) +"
"0","    # Formatting"
"0","    labs("
"0","      x = ""Age (years)"","
"0","      y = ""Cumulative Penetrance"","
"0","      title = paste(""Sample Size ="", size, ""Families""),"
"0","      color = ""Sex"","
"0","      fill = ""Sex"","
"0","      linetype = ""Type"""
"0","    ) +"
"0","    scale_color_manual(values = c(""Female"" = ""#CC6677"", ""Male"" = ""#4477AA"")) +"
"0","    scale_fill_manual(values = c(""Female"" = ""#CC6677"", ""Male"" = ""#4477AA"")) +"
"0","    scale_linetype_manual(values = c(""Est"" = ""dashed"", ""True"" = ""solid"")) +"
"0","    theme_minimal(base_size = 12) +"
"0","    theme("
"0","      legend.position = ""bottom"","
"0","      panel.grid.minor = element_blank(),"
"0","      panel.border = element_rect(fill = NA, color = ""gray80"", size = 0.5),"
"0","      plot.title = element_text(hjust = 0.5, size = 14),"
"0","      legend.box = ""vertical"","
"0","      legend.margin = margin()"
"0","    ) +"
"0","    scale_y_continuous(limits = c(0, 1), labels = scales::percent_format(accuracy = 1))"
"0",""
"0","  return(p)"
"0","}"
"0",""
"0","# Calculate Mean Squared Error (MSE) for each sample size and sex"
"0","mse_metrics <- data.frame()"
"0","for (name in names(all_params)) {"
"0","  size <- as.numeric(gsub(""n"", """", name))"
"0","  est_data <- estimated_curves[[name]]"
"0","  "
"0","  # Calculate MSE across all ages"
"0","  female_mse <- mean((est_data$Female_Est - true_pen_df$Female_True)^2)"
"0","  male_mse <- mean((est_data$Male_Est - true_pen_df$Male_True)^2)"
"0","  "
"0","  mse_metrics <- rbind(mse_metrics, "
"0","                      data.frame("
"0","                        SampleSize = size,"
"0","                        Female_MSE = female_mse,"
"0","                        Male_MSE = male_mse"
"0","                      ))"
"0","}"
"0",""
"0","# Display MSE metrics"
"0","knitr::kable(mse_metrics, digits = 6, "
"0","            caption = ""Mean Squared Error by Sample Size"")"
