"0","# Function to run penetrance estimation for a specific sample size"
"0","run_penetrance_estimation <- function(size, n_iter = 10000, n_chains = 1, ncores = 4) {"
"0","  # Load the relevant data"
"0","  data_file <- file.path(results_dir, paste0(""reformatted_"", size, "".RData""))"
"0","  if (!file.exists(data_file)) {"
"0","    message(paste0(""Data file not found for sample size "", size))"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  load(data_file)  # loads 'reformatted_data'"
"0","  "
"0","  # Define prior parameters - you can customize these based on domain knowledge"
"0","  prior_params <- list("
"0","    asymptote = list(g1 = 1, g2 = 1),"
"0","    threshold = list(min = 5, max = 40),"
"0","    median = list(m1 = 2, m2 = 2),"
"0","    first_quartile = list(q1 = 6, q2 = 3)"
"0","  )"
"0","  "
"0","  message(paste0(""Running penetrance estimation for sample size "", size, "" with "", n_iter, "" iterations""))"
"0","  "
"0","  # Set up progress tracking"
"0","  start_time <- Sys.time()"
"0","  "
"0","  # Get allele frequency from PanelPRO database"
"0","  prev <- PanelPRO::PanelPRODatabase$AlleleFrequency[paste0(""MLH1"", ""_anyPV""), ""nonAJ""]"
"0","  "
"0","  # Add try-catch for error handling"
"0","  result <- tryCatch({"
"0","    # Call your penetrance function"
"0","    penetrance("
"0","      pedigree = reformatted_data, "
"0","      twins = NULL, "
"0","      n_chains = n_chains, "
"0","      n_iter_per_chain = n_iter, "
"0","      ncores = ncores, "
"0","      baseline_data = baseline_data_default, "
"0","      prev = prev, "
"0","      prior_params = prior_params,"
"0","      imp_interval = 10, "
"0","      burn_in = 0.1, "
"0","      median_max = TRUE,  "
"0","      age_imputation = FALSE, "
"0","      remove_proband = FALSE"
"0","    )"
"0","  }, error = function(e) {"
"0","    message(paste0(""Error in penetrance estimation for sample size "", size, "": "", e$message))"
"0","    return(NULL)"
"0","  })"
"0","  "
"0","  end_time <- Sys.time()"
"0","  time_taken <- difftime(end_time, start_time, units = ""mins"")"
"0","  message(paste0(""Completed penetrance estimation for sample size "", size, "
"0","                "" in "", round(time_taken, 2), "" minutes""))"
"0","  "
"0","  # Save the results"
"0","  if (!is.null(result)) {"
"0","    output_file <- file.path(results_dir, paste0(""out_sim_COL_MLH1_sim"", size, "".RData""))"
"0","    save(result, file = output_file)"
"0","    message(paste0(""Saved results to "", output_file))"
"0","  }"
"0","  "
"0","  return(result)"
"0","}"
"0",""
"0","# Run the penetrance estimation for all sample sizes"
"0","results_list <- list()"
"0",""
"0","for (size in sample_sizes) {"
"0","  # Adjust iterations based on sample size"
"0","  n_iter <- ifelse(size > 400, 10000, 10000) "
"0","  n_chains <- ifelse(size > 400, 1, 1)  # More chains for larger sample sizes"
"0","  "
"0","  # Run estimation"
"0","  result <- run_penetrance_estimation(size, n_iter, n_chains, ncores = parallel::detectCores() - 1)"
"0","  "
"0","  if (!is.null(result)) {"
"0","    set_name <- paste0(""fam"", size)"
"0","    results_list[[set_name]] <- result"
"0","  }"
"0","}"
"2","Running penetrance estimation for sample size 30 with 10000 iterations
"
"2","Rejection rates:
"
"2","  Chain 1: 0.82
"
