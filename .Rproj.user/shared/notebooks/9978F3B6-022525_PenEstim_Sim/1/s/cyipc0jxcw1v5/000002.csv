"0","# Define sample sizes"
"0","sample_sizes <- c(30, 130, 400, 1000)"
"0",""
"0","# Set seed for reproducibility"
"0","set.seed(2024)"
"0",""
"0","# Run simulation with default parameters"
"0","message(""Running simulation with PanelPRO default penetrance..."")"
"2","Running simulation with PanelPRO default penetrance...
"
"0","sim_result <- try(simulateFamilies(numberFamilies = 3000, gene_freq = 0.1), silent = TRUE)"
"0",""
"0","if(class(sim_result) == ""try-error"") {"
"0","  message(""Error in simulation. Using smaller sample for testing."")"
"0","  sim_result <- simulateFamilies(numberFamilies = 100, gene_freq = 0.1)"
"0","}"
"0",""
"0","message(paste0(""Generated "", length(sim_result$families), "" families""))"
"2","Generated 3000 families
"
"0","# Process the simulation results"
"0","masked_families <- processSimulation(sim_result)"
"0","message(paste0(""After filtering and masking: "", length(masked_families), "" families with carrier probands""))"
"2","After filtering and masking: 586 families with carrier probands
"
"0","# Get the PanelPRO default penetrance functions"
"0","true_penetrance <- get_panelpro_penetrance()"
"0","message(""Retrieved PanelPRO default penetrance functions"")"
"2","Retrieved PanelPRO default penetrance functions
"
"0","# Save the results for future use"
"0","save(masked_families, file = file.path(results_dir, ""masked_families_panelpro.RData""))"
"0","save(true_penetrance, file = file.path(results_dir, ""true_penetrance_panelpro.RData""))"
"0","message(""Saved simulation results"")"
"2","Saved simulation results
"
"0","# Create samples of different sizes"
"0","sim_sets <- vector(""list"", length(sample_sizes))"
"0","names(sim_sets) <- paste0(""fam"", sample_sizes)"
"0",""
"0","# Generate the samples"
"0","for (i in seq_along(sample_sizes)) {"
"0","  size <- sample_sizes[i]"
"0","  set_name <- paste0(""fam"", size)"
"0","  "
"0","  # Check if we have enough families"
"0","  if (size <= length(masked_families)) {"
"0","    # Select random families"
"0","    selected_indices <- sample(1:length(masked_families), size)"
"0","    sim_sets[[set_name]] <- masked_families[selected_indices]"
"0","    message(paste0(""Created sample of size "", size))"
"0","    "
"0","    # Save the sample"
"0","    sample_data <- sim_sets[[set_name]]"
"0","    save(sample_data, file = file.path(results_dir, paste0(""sample_"", size, ""_panelpro.RData"")))"
"0","  } else {"
"0","    message(paste0(""Warning: Not enough families to create sample of size "", size, "". Using all available families.""))"
"0","    # Use all available families for this sample size"
"0","    sim_sets[[set_name]] <- masked_families"
"0","    message(paste0(""Using all "", length(masked_families), "" available families instead""))"
"0","    "
"0","    # Save the sample"
"0","    sample_data <- sim_sets[[set_name]]"
"0","    save(sample_data, file = file.path(results_dir, paste0(""sample_"", size, ""_panelpro.RData"")))"
"0","  }"
"0","}"
"2","Created sample of size 30
"
"2","Created sample of size 130
"
"2","Created sample of size 400
"
"2","Warning: Not enough families to create sample of size 1000. Using all available families.
"
"2","Using all 586 available families instead
"
"0","# Initialize lists to store reformatted data"
"0","reformatted_sets <- vector(""list"", length(sample_sizes))"
"0","names(reformatted_sets) <- paste0(""fam"", sample_sizes)"
"0",""
"0","# Reformat each sample for analysis"
"0","for (i in seq_along(sample_sizes)) {"
"0","  size <- sample_sizes[i]"
"0","  set_name <- paste0(""fam"", size)"
"0","  "
"0","  if (!is.null(sim_sets[[set_name]])) {"
"0","    # Reformat the data"
"0","    reformatted_sets[[set_name]] <- reformatFamilies(sim_sets[[set_name]])"
"0","    "
"0","    # Save the reformatted data"
"0","    formatted_data <- reformatted_sets[[set_name]]"
"0","    save(formatted_data, file = file.path(results_dir, paste0(""reformatted_"", size, "".RData"")))"
"0","    message(paste0(""Saved reformatted data for sample size "", size))"
"0","  }"
"0","}"
"2","Saved reformatted data for sample size 30
"
"2","Saved reformatted data for sample size 130
"
"2","Saved reformatted data for sample size 400
"
"2","Saved reformatted data for sample size 1000
"
"0","# Verify the number of families in each set"
"0","for (i in seq_along(sample_sizes)) {"
"0","  size <- sample_sizes[i]"
"0","  set_name <- paste0(""fam"", size)"
"0","  cat(paste0(set_name, "": "", length(sim_sets[[set_name]]), "" families\n""))"
"0","}"
"1","fam30: 30 families
"
"1","fam130: 130 families
"
"1","fam400: 400 families
"
"1","fam1000: 586 families
"
