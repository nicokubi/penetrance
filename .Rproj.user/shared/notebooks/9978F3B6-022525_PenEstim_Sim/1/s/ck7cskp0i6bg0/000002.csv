"0","# Load survival analysis package"
"0","library(survival)"
"0",""
"0","# Function to plot penetrance curves from KM estimates"
"0","plot_penetrance_curves <- function(km_fit, title, show_ci = TRUE) {"
"0","  # Extract survival data"
"0","  surv_data <- data.frame("
"0","    time = km_fit$time,"
"0","    penetrance = 1 - km_fit$surv, # Convert survival to penetrance"
"0","    strata = rep(names(km_fit$strata), km_fit$strata)"
"0","  )"
"0",""
"0","  if (show_ci && !is.null(km_fit$upper)) {"
"0","    surv_data$upper <- 1 - km_fit$lower # Note the swap of upper/lower"
"0","    surv_data$lower <- 1 - km_fit$upper"
"0","  }"
"0",""
"0","  # Create the plot"
"0","  p <- ggplot(surv_data, aes(x = time, y = penetrance, color = strata)) +"
"0","    geom_step(size = 1.2) +"
"0","    {"
"0","      if (show_ci) geom_ribbon(aes(ymin = lower, ymax = upper, fill = strata), alpha = 0.2)"
"0","    } +"
"0","    labs("
"0","      x = ""Age"","
"0","      y = ""Cumulative Risk (Penetrance)"","
"0","      color = ""Group"""
"0","    ) +"
"0","    theme_minimal() +"
"0","    theme("
"0","      plot.title = element_text(size = 14, face = ""bold""),"
"0","      axis.text = element_text(size = 10),"
"0","      axis.title = element_text(size = 12),"
"0","      legend.position = ""bottom"","
"0","      legend.title = element_text(size = 10),"
"0","      legend.text = element_text(size = 9)"
"0","    ) +"
"0","    scale_y_continuous("
"0","      limits = c(0, 1),"
"0","      labels = scales::percent_format(accuracy = 1)"
"0","    ) +"
"0","    ggtitle(title)"
"0",""
"0","  return(p)"
"0","}"
"0",""
"0","# For each sample size, create penetrance plots"
"0","# For each sample size, create penetrance plots"
"0","for (i in seq_along(sample_sizes)) {"
"0","  size <- sample_sizes[i]"
"0","  set_name <- paste0(""fam"", size)"
"0",""
"0","  if (!is.null(reformatted_sets[[set_name]])) {"
"0","    # Describe the families"
"0","    cat(sprintf(""\nDescribing families for sample size %d:\n"", size))"
"0","    family_description <- describeFamilies(reformatted_sets[[set_name]])"
"0","    "
"0","    # Prepare data for Kaplan-Meier"
"0","    km_data <- try(prepareKa"
"0",""
"0","  if (!is.null(reformatted_sets[[set_name]])) {"
"2","Error: unexpected 'if' in:
""
  if""
"
