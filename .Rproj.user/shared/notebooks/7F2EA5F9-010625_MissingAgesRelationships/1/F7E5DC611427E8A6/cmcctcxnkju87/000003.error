{"frames":[{"func":"process_pedigree_data(carrier_families_list)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(dat, function(df) {\n    for (old_name in names(col_mapping)) {\n        if (old_name %in% colnames(df)) {\n            colnames(df)[colnames(df) == old_name] <- col_mapping[old_name] ...","file":"","line_number":42,"end_line_number":97,"character_number":5,"end_character_number":6},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`$<-`(`*tmp*`, CurAge, value = logical(0))","file":"","line_number":51,"end_line_number":53,"character_number":9,"end_character_number":47},{"func":"`$<-.data.frame`(`*tmp*`, CurAge, value = logical(0))","file":"","line_number":51,"end_line_number":53,"character_number":9,"end_character_number":47},{"func":"stop(sprintf(ngettext(N, \"replacement has %d row, data has %d\", \n    \"replacement has %d rows, data has %d\"), N, nrows), domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in `$<-.data.frame`(`*tmp*`, CurAge, value = logical(0)) : \n  replacement has 0 rows, data has 35\n"}