{"frames":[{"func":"analyze_missing_ages(dat)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(rbind, lapply(dat_adjusted, function(df) {\n    relationships <- get_relationship_to_proband(df)\n    simplified_relationships <- case_when(relationships == \"Proband\" ~ \n        \"Proband\", grepl(\"1st Degree\", relationships) ~ \"First Degree\",  ...","file":"","line_number":119,"end_line_number":134,"character_number":3,"end_character_number":5},{"func":"lapply(dat_adjusted, function(df) {\n    relationships <- get_relationship_to_proband(df)\n    simplified_relationships <- case_when(relationships == \"Proband\" ~ \n        \"Proband\", grepl(\"1st Degree\", relationships) ~ \"First Degree\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"data.frame(Relationship = simplified_relationships, Missing_CurAge = is.na(df$CurAge), \n    Missing_Age = is.na(df$Age) & df$isAff == 1)","file":"","line_number":129,"end_line_number":133,"character_number":5,"end_character_number":5},{"func":"stop(gettextf(\"arguments imply differing number of rows: %s\", \n    paste(unique(nrows), collapse = \", \")), domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in data.frame(Relationship = simplified_relationships, Missing_CurAge = is.na(df$CurAge),  : \n  arguments imply differing number of rows: 74, 0\n"}