[{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Simulation Study with penetrance","text":"apply penetrance package simulated families data-generating penetrance function known illustrate estimation parameters Weibull distribution.","code":""},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated Data","title":"Simulation Study with penetrance","text":"data used simulation available sim_fam.Rdata. Recall parameterization Weibull distribution.function f(x;α,β,δ,γ)f(x; \\alpha, \\beta, \\delta, \\gamma) define: f(x;α,β,δ,γ)={γ(αβ(x−δβ)α−1e−(x−δβ)α),x≥δ0,x<δ f(x; \\alpha, \\beta, \\delta, \\gamma) =  \\begin{cases}  \\gamma \\left( \\frac{\\alpha}{\\beta} \\left( \\frac{x - \\delta}{\\beta} \\right)^{\\alpha - 1} e^{-\\left( \\frac{x - \\delta}{\\beta} \\right)^\\alpha } \\right), & x \\geq \\delta \\\\ 0, & x < \\delta \\end{cases} cumulative distribution function F(x;α,β,δ,γ)F(x; \\alpha, \\beta, \\delta, \\gamma): F(x;α,β,δ,γ)={γ(1−e−(x−δβ)α),x≥δ0,x<δ F(x; \\alpha, \\beta, \\delta, \\gamma) = \\begin{cases}  \\gamma \\left( 1 - e^{-\\left( \\frac{x - \\delta}{\\beta} \\right)^\\alpha } \\right), & x \\geq \\delta \\\\ 0, & x < \\delta \\end{cases} data-generating penetrance constructed using following parameters Weibull distribution. families simulated using PedUtils Rpackage.","code":"# Create generating_penetrance data frame age <- 1:94  # Calculate Weibull distribution for Females alpha <- 2  beta  <- 50  gamma <- 0.6 delta <- 15 penetrance.mod.f <- dweibull(age - delta, alpha, beta) * gamma  # Calculate Weibull distribution for Males alpha <- 2  beta  <- 50  gamma <- 0.6 delta <- 30 penetrance.mod.m <- dweibull(age - delta, alpha, beta) * gamma  generating_penetrance <- data.frame(     Age = age,     Female = penetrance.mod.f,     Male = penetrance.mod.m ) dat <- simulated_families"},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study.html","id":"simple-simulation","dir":"Articles","previous_headings":"","what":"Simple simulation","title":"Simulation Study with penetrance","text":"run estimation using default settings.","code":"# Set the random seed set.seed(2024)  # Set the prior prior_params <- list(     asymptote = list(g1 = 1, g2 = 1),     threshold = list(min = 5, max = 40),     median = list(m1 = 2, m2 = 2),     first_quartile = list(q1 = 6, q2 = 3) )  # Set the prevalence prevMLH1 <- 0.001  # We use the default baseline (non-carrier) penetrance print(baseline_data_default)  # We run the estimation procedure with one chain and 20k iterations   out_sim <- penetrance(     pedigree  = dat, twins = NULL, n_chains = 1, n_iter_per_chain = 20000,      ncores = 2, baseline_data = baseline_data_default , prev = prevMLH1,      prior_params = prior_params, burn_in = 0.1, median_max = TRUE,       ageImputation = FALSE, removeProband = FALSE )"},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study.html","id":"comparison-of-estimated-curves-vs--data-generating-curves","dir":"Articles","previous_headings":"","what":"Comparison of estimated curves vs. data-generating curves","title":"Simulation Study with penetrance","text":"plot respective penetrance curves data-generating distribution defined penetrance curves (including credible intervals) estimation procedure.","code":"# Function to calculate Weibull cumulative density weibull_cumulative <- function(x, alpha, beta, threshold, asymptote) {   pweibull(x - threshold, shape = alpha, scale = beta) * asymptote }  # Function to plot the penetrance and compare with simulated data plot_penetrance_comparison <- function(data, generating_penetrance, prob, max_age, sex) {   if (prob <= 0 || prob >= 1) {     stop(\"prob must be between 0 and 1\")   }    # Calculate Weibull parameters for the given sex   params <- if (sex == \"Male\") {     calculate_weibull_parameters(       data$median_male_results,       data$first_quartile_male_results,       data$threshold_male_results     )   } else if (sex == \"Female\") {     calculate_weibull_parameters(       data$median_female_results,       data$first_quartile_female_results,       data$threshold_female_results     )   } else {     stop(\"Invalid sex. Please choose 'Male' or 'Female'.\")   }    alphas <- params$alpha   betas <- params$beta   thresholds <- if (sex == \"Male\") data$threshold_male_results else data$threshold_female_results   asymptotes <- if (sex == \"Male\") data$asymptote_male_results else data$asymptote_female_results    x_values <- seq(1, max_age)    # Calculate cumulative densities for the specified sex   cumulative_density <- mapply(function(alpha, beta, threshold, asymptote) {     pweibull(x_values - threshold, shape = alpha, scale = beta) * asymptote   }, alphas, betas, thresholds, asymptotes, SIMPLIFY = FALSE)    distributions_matrix <- matrix(unlist(cumulative_density), nrow = length(x_values), byrow = FALSE)   mean_density <- rowMeans(distributions_matrix, na.rm = TRUE)    # Calculate credible intervals   lower_prob <- (1 - prob) / 2   upper_prob <- 1 - lower_prob   lower_ci <- apply(distributions_matrix, 1, quantile, probs = lower_prob)   upper_ci <- apply(distributions_matrix, 1, quantile, probs = upper_prob)    # Recover the data-generating penetrance   cumulative_generating_penetrance <- cumsum(generating_penetrance[[sex]])    # Create data frame for plotting   age_values <- seq_along(cumulative_generating_penetrance)   min_length <- min(length(cumulative_generating_penetrance), length(mean_density))    plot_df <- data.frame(     age = age_values[1:min_length],     cumulative_generating_penetrance = cumulative_generating_penetrance[1:min_length],     mean_density = mean_density[1:min_length],     lower_ci = lower_ci[1:min_length],     upper_ci = upper_ci[1:min_length]   )    # Plot the cumulative densities with credible intervals   p <- ggplot(plot_df, aes(x = age)) +     geom_line(aes(y = cumulative_generating_penetrance, color = \"Data-generating penetrance\"), linewidth = 1, linetype = \"solid\", na.rm = TRUE) +     geom_line(aes(y = mean_density, color = \"Estimated penetrance\"), linewidth = 1, linetype = \"dotted\", na.rm = TRUE) +     geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.2, fill = \"red\", na.rm = TRUE) +     labs(title = paste(\"Cumulative Density Comparison for\", sex),          x = \"Age\",          y = \"Cumulative Density\") +     theme_minimal() +     scale_color_manual(values = c(\"Data-generating penetrance\" = \"blue\",                                    \"Estimated penetrance\" = \"red\")) +     scale_y_continuous(labels = scales::percent) +     theme(legend.title = element_blank())    print(p)    # Calculate Mean Squared Error (MSE)   mse <- mean((plot_df$cumulative_generating_penetrance - plot_df$mean_density)^2, na.rm = TRUE)   cat(\"Mean Squared Error (MSE):\", mse, \"\\n\")    # Calculate Confidence Interval Coverage   coverage <- mean((plot_df$cumulative_generating_penetrance >= plot_df$lower_ci) &                     (plot_df$cumulative_generating_penetrance <= plot_df$upper_ci), na.rm = TRUE)   cat(\"Confidence Interval Coverage:\", coverage, \"\\n\") }  # Plot for Female plot_penetrance_comparison(   data = out_sim$combined_chains,   generating_penetrance = generating_penetrance,   prob = 0.95,   max_age = 94,   sex = \"Female\" ) ## Mean Squared Error (MSE): 0.002250424  ## Confidence Interval Coverage: 0.6702128 # Plot for Male plot_penetrance_comparison(   data = out_sim$combined_chains,   generating_penetrance = generating_penetrance,   prob = 0.95,   max_age = 94,   sex = \"Male\" ) ## Mean Squared Error (MSE): 0.000929737  ## Confidence Interval Coverage: 1"},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study_real.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Simulation study from empirical data with penetrance","text":"apply penetrance package simulated families data-generating penetrance function known based existing penetrance estimates.","code":""},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study_real.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated Data","title":"Simulation study from empirical data with penetrance","text":"data-generating distribution age-specific penetrances based existing penetrance estimates Colorectal cancer carriers pathogenic variant MLH1 PanelPRO Database. families simulated using PedUtils Rpackage.","code":"dat <- test_fam2"},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study_real.html","id":"simple-simulation","dir":"Articles","previous_headings":"","what":"Simple simulation","title":"Simulation study from empirical data with penetrance","text":"run estimation using default settings.","code":"# Set the random seed set.seed(2024)  # Set the prior prior_params <- list(     asymptote = list(g1 = 1, g2 = 1),     threshold = list(min = 5, max = 30),     median = list(m1 = 2, m2 = 2),     first_quartile = list(q1 = 6, q2 = 3) )  # Set the allele frequency for MLH1 based on PanelPRO Database prevMLH1 <- 0.0004453125   # We use the default baseline (non-carrier) penetrance print(baseline_data_default)  # We run the estimation procedure with one chain and 20k iterations   out_sim <- penetrance(     pedigree  = dat, twins = NULL, n_chains = 1, n_iter_per_chain = 20000,      ncores = 2, baseline_data = baseline_data_default , prev = prevMLH1,      prior_params = prior_params, burn_in = 0.1, median_max = TRUE,       ageImputation = FALSE, removeProband = FALSE )"},{"path":"https://nicokubi.github.io/penetrance/articles/simulation_study_real.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Simulation study from empirical data with penetrance","text":"Lee G, Liang JW, Zhang Q, Huang T, Choirat C, Parmigiani G, Braun D. Multi-syndrome, multi-gene risk modeling individuals family history cancer novel R package PanelPRO. Elife. 2021;10:e68699. doi:10.7554/eLife.6869","code":""},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Using penetrance","text":"user must specify pedigree argument data frame contains family data (see test_family_1). family data must correct format following columns: ID: numeric value representing unique identifier individual. duplicated entries. Sex: numeric value 0 indicates female 1 indicates male. Missing entries currently supported. MotherID: numeric value representing unique identifier individual’s mother. FatherID: numeric value representing unique identifier individual’s father. isProband: numeric value 1 indicates individual proband 0 otherwise. CurAge: numeric value indicating age censoring (current age person alive age death person deceased). Allowed ages range 1 94. isAff: numeric value indicating affection status cancer, 1 diagnosed individuals 0 otherwise. Missing entries supported. Age: numeric value indicating age cancer diagnosis, encoded NA individual diagnosed. Allowed ages range 1 94. Geno: column germline testing tumor marker testing results. Positive results coded 1, negative results 0, unknown results NA left empty.","code":""},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"age-imputation","dir":"Articles","previous_headings":"","what":"Age Imputation","title":"Using penetrance","text":"PenEsim also includes option automatic age imputation AgeImputation. imputation ages performed based individual’s affected status (aff), sex (sex), degree relationship proband, carrier pathogenic variant (PV). calculate degree relationship proband, use kinship matrix pedigree data. degree relationship two individuals twice kinship coefficient. affected individuals (aff = 1), randomly drawn value less relationship probability, age drawn Weibull distribution. Weibull distribution parameters males females (α,β,δ)(\\alpha, \\beta, \\delta). quantile function Weibull distribution used draw ages (separately males females). random draw exceeds relationship probability, age drawn SEER data using inverse CDF method. case, individual assumed non-carrier PV. calculate empirical density non-affected individuals, filter dataset include non-affected individuals estimate density ages. randomly draw age distribution non-affected individuals.","code":""},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"estimation-approach","dir":"Articles","previous_headings":"","what":"Estimation Approach","title":"Using penetrance","text":"estimation assumes Mendelian model single biallelic locus. main function penetrance implements Bayesian approach estimate parameters carrier penetrance function. estimation routine employs Adaptive Metropolis Hastings (MH) algorithm based Haario et al., (2001). build existing software implementations Elston-Stewart peeling algorithm R package clipp efficiently compute likelihoods. model penetrance curve choose Weibull distribution widely used reliability engineering survival analysis. provide flexibility extend standard Weibull distribution four parameters additional threshold parameter (δ\\delta) move distribution along age axis asymptote parameter (0<γ<10 < \\gamma < 1) allows incomplete penetrance interpreted lifetime probability developing cancer. Hence, vector parameters θ=(α,β,γ,δ)\\theta = (\\alpha, \\beta, \\gamma, \\delta). Specifically, model density ff corresponding cumulative distribution functions FF : f(x;α,β,δ,γ)={γ(αβ(x−δβ)α−1e−(x−δβ)α)x≥δ0x<δ f(x; \\alpha, \\beta, \\delta, \\gamma) = \\begin{cases}  \\gamma \\left( \\frac{\\alpha}{\\beta} \\left( \\frac{x - \\delta}{\\beta} \\right)^{\\alpha - 1} e^{ -\\left( \\frac{x - \\delta}{\\beta} \\right)^\\alpha } \\right) & x \\geq \\delta \\\\ 0 & x < \\delta \\end{cases}  MCMC estimation approach allows us sample posterior distribution efficient way order infer estimates parameters Weibull distribution.","code":""},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"prior-specification","dir":"Articles","previous_headings":"","what":"Prior Specification","title":"Using penetrance","text":"run MCMC algorithm, prior distributions θ=(α,β,γ,δ)\\theta = (\\alpha, \\beta, \\gamma, \\delta) need specified. package provides user flexible approach prior specification, balancing customization easy--use workflow. following settings prior distribution specification available: - Default: default setting employs pre-specified, uninformative priors. - Custom Parameters: user can tune parameters default setting directly overwriting parameters prior_params_default object. - Prior Elicitation Existing Studies: user can input data previous penetrance studies automatically elicit customized priors. default setting adjusted reflect additional information based provided inputs.","code":"# The default prior  prior_params_default <- list(     asymptote = list(g1 = 1, g2 = 1),     threshold = list(min = 15, max = 35),     median = list(m1 = 2, m2 = 2),     first_quartile = list(q1 = 6, q2 = 3) )  distribution_data_test <- data.frame(   row.names = c(\"min\", \"first_quartile\", \"median\", \"max\"),   age = c(NA, NA, NA, NA),   at_risk = c(NA, NA, NA, NA) )"},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"estimation-using-penetrance","dir":"Articles","previous_headings":"","what":"Estimation using penetrance","title":"Using penetrance","text":"ways user can specify estimation approach run. Available options :","code":"#' @param twins A list specifying identical twins or triplets in the family. For example, to indicate that \"ora024\" and \"ora027\" are identical twins, and \"aey063\" and \"aey064\" are identical twins, use the following format: `twins <- list(c(\"ora024\", \"ora027\"), c(\"aey063\", \"aey064\"))`. #' @param n_chains Integer, the number of chains for parallel computation. Default is 1. #' @param n_iter_per_chain Integer, the number of iterations for each chain. Default is 10000. #' @param ncores Integer, the number of cores for parallel computation. Default is 6. #' @param baseline_data Data for the baseline risk estimates (probability of developing cancer), such as population-level risk from a cancer registry. Default data, for exemplary purposes, is for Colorectal cancer from the SEER database. #' @param max_age Integer, the maximum age considered for analysis. Default is 94. #' @param remove_proband Logical, indicating whether to remove probands from the analysis. Default is FALSE. #' @param age_imputation Logical, indicating whether to perform age imputation. Default is FALSE. #' @param median_max Logical, indicating whether to use the baseline median age or `max_age` as an upper bound for the median proposal. Default is TRUE. #' @param BaselineNC Logical, indicating that the non-carrier penetrance is assumed to be the baseline penetrance. Default is TRUE. #' @param var Numeric vector, variances for the proposal distribution in the Metropolis-Hastings algorithm. Default is `c(0.1, 0.1, 2, 2, 5, 5, 5, 5)`. #' @param burn_in Numeric, the fraction of results to discard as burn-in (0 to 1). Default is 0 (no burn-in). #' @param thinning_factor Integer, the factor by which to thin the results. Default is 1 (no thinning). #' @param imp_interval Integer, the interval at which age imputation should be performed when age_imputation = TRUE. #' @param distribution_data Data for generating prior distributions. #' @param prev Numeric, prevalence of the carrier status. Default is 0.0001. #' @param sample_size Optional numeric, sample size for distribution generation. #' @param ratio Optional numeric, ratio parameter for distribution generation. #' @param prior_params List, parameters for prior distributions. #' @param risk_proportion Numeric, proportion of risk for distribution generation. #' @param summary_stats Logical, indicating whether to include summary statistics in the output. Default is TRUE. #' @param rejection_rates Logical, indicating whether to include rejection rates in the output. Default is TRUE. #' @param density_plots Logical, indicating whether to include density plots in the output. Default is TRUE. #' @param plot_trace Logical, indicating whether to include trace plots in the output. Default is TRUE. #' @param penetrance_plot Logical, indicating whether to include penetrance plots in the output. Default is TRUE. #' @param penetrance_plot_pdf Logical, indicating whether to include PDF plots in the output. Default is TRUE. #' @param plot_loglikelihood Logical, indicating whether to include log-likelihood plots in the output. Default is TRUE. #' @param plot_acf Logical, indicating whether to include autocorrelation function (ACF) plots for posterior samples. Default is TRUE. #' @param probCI Numeric, probability level for credible intervals in penetrance plots. Must be between 0 and 1. Default is 0.95. #' @param sex_specific Logical, indicating whether to use sex-specific parameters in the analysis. Default is TRUE."},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"example","dir":"Articles","previous_headings":"Estimation using penetrance","what":"Example","title":"Using penetrance","text":"run algorithm, require user input: single chain 10k iterations adaptive MH algorithm. number cores paralellization set ncores = 4. pedigree data test family 1. prevalence set prev = 0.0001. penetrance function takes baseline age-specific probabilitie developing cancer input baseline_data. default setting BaselineNC = TRUE baseline assumed reflect non-carrier penetrance. rare mutations considered reasonable assumption. baseline_data must data frame baseline penetrance females males. specified parameters prior distributions per specification prior_params_default object (see ). burn-set burn_in = 0.1, means first 1000 iterations chain discarded (given 10k iterations algorithm). median age onset baseline (non-carrier) penentrance set upper bound proposed median, given median_max = TRUE. automatic age imputation AgeImputation (see ) applied , given ageImputation = FALSE. exemplary output estimation procedure can seen .","code":"# This is exemplary SEER penetrance data for Colorectal Cancer.  baseline_data_default <- data.frame(   Age = 1:94,   Female = c(     2.8e-07, 9e-08, 1e-08, 3e-08, 5e-08, 7e-08, 9e-08, 7e-08, 5e-08, 4e-08, 2e-08, 4e-08, 3.2e-07, 6.3e-07, 9.5e-07, 1.27e-06,     1.94e-06, 4.73e-06, 7.88e-06, 1.102e-05, 1.417e-05, 1.916e-05, 3.517e-05, 5.303e-05, 7.088e-05, 8.873e-05, 0.00010961,     1.486e-04, 1.906e-04, 0.00023261, 0.00027461, 0.00032101, 0.00039385, 0.00047109, 0.00054832, 0.00062554, 7.166e-04,     0.00089081, 0.00107885, 0.00126684, 0.00145479, 0.00163827, 0.00179526, 0.00194779, 0.00210026, 0.00225264, 0.00239638,     0.00248859, 0.00257215, 0.00265562, 0.00273901, 0.00281841, 0.00287439, 0.00292639, 0.00297831, 0.00303014, 0.00309486,     0.00323735, 0.00339265, 0.00354775, 0.00370266, 0.00385852, 0.00402115, 0.0041847, 0.00434799, 4.511e-03, 0.00466219,     0.00474384, 0.00481372, 0.00488337, 0.0049528, 0.00500362, 0.00494413, 0.00486620, 0.00478821, 0.00471016, 0.00462597,     0.00450511, 0.00437818, 0.00425130, 0.00412450, 0.00399836, 0.00387577, 0.00375380, 0.00363187, 0.00351002, 0.00338186,     0.00321541, 0.00304280, 0.00287050, 0.00269853, 0.00253244, 0.00239963, 0.00227262   ),   Male = c(     2.8e-07, 9e-08, 1e-08, 3e-08, 5e-08, 7e-08, 9e-08, 7e-08, 5e-08, 4e-08, 2e-08, 4e-08, 3.2e-07, 6.3e-07, 9.5e-07, 1.27e-06,     1.94e-06, 4.73e-06, 7.88e-06, 1.102e-05, 1.417e-05, 1.916e-05, 3.517e-05, 5.303e-05, 7.088e-05, 8.873e-05, 0.00010961,     1.486e-04, 1.906e-04, 0.00023261, 0.00027461, 0.00032101, 0.00039385, 0.00047109, 0.00054832, 0.00062554, 7.166e-04,     0.00089081, 0.00107885, 0.00126684, 0.00145479, 0.00163827, 0.00179526, 0.00194779, 0.00210026, 0.00225264, 0.00239638,     0.00248859, 0.00257215, 0.00265562, 0.00273901, 0.00281841, 0.00287439, 0.00292639, 0.00297831, 0.00303014, 0.00309486,     0.00323735, 0.00339265, 0.00354775, 0.00370266, 0.00385852, 0.00402115, 0.0041847, 0.00434799, 4.511e-03, 0.00466219,     0.00474384, 0.00481372, 0.00488337, 0.0049528, 0.00500362, 0.00494413, 0.00486620, 0.00478821, 0.00471016, 0.00462597,     0.00450511, 0.00437818, 0.00425130, 0.00412450, 0.00399836, 0.00387577, 0.00375380, 0.00363187, 0.00351002, 0.00338186,     0.00321541, 0.00304280, 0.00287050, 0.00269853, 0.00253244, 0.00239963, 0.00227262   ) ) output <- penetrance(     pedigree  = dat, twins = NULL, n_chains = 1, n_iter_per_chain = 20000,    ncores = 2, baseline_data = baseline_data_default, prev  = 0.0001,      prior_params = prior_params_default, burn_in = 0.1, median_max = TRUE,     age_imputation = TRUE, sex_specific = TRUE ) plot_penetrance(data = output$combined_chains, prob = 0.95) plot_pdf(data = output$combined_chains, prob = 0.95)"},{"path":"https://nicokubi.github.io/penetrance/articles/using_penetrance.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Using penetrance","text":"Andrieu C, Thoms J. tutorial adaptive MCMC. Stat Comput. 2008; 18(3):343–373. doi: 10.1007/s11222- 008-9110-y. Golicher AR. clipp: Calculating Likelihoods Pedigree Paring; 2023, https://CRAN.R-project.org/package=clipp, r package version 1.7.0. Haario H, Saksman E, Tamminen J. adaptive Metropolis algorithm. Bernoulli. 2001; 7(2):223–242. Lange K, Elston RC. Extensions pedigree analysis . Likehood calculations simple complex pedigrees. Hum Hered. 1975;25(2):95-105.","code":""},{"path":"https://nicokubi.github.io/penetrance/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Kubista. Author, maintainer. BayesMendel Lab. Author.","code":""},{"path":"https://nicokubi.github.io/penetrance/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kubista N, Lab B (2025). penetrance: Methods Penetrance Estimation Family-Based Studies. R package version 0.1.1, https://nicokubi.github.io/penetrance/, https://github.com/nicokubi/penetrance.","code":"@Manual{,   title = {penetrance: Methods for Penetrance Estimation in Family-Based Studies},   author = {Nicolas Kubista and BayesMendel Lab},   year = {2025},   note = {R package version 0.1.1, https://nicokubi.github.io/penetrance/},   url = {https://github.com/nicokubi/penetrance}, }"},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"penetrance-r-package","dir":"","previous_headings":"","what":"Methods for Penetrance Estimation in Family-Based Studies","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"R package estimation age-specific penetrance complex family-based studies format compatible PanelPRO R package.","code":""},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"Accurate estimation age-specific penetrance essential assessing disease risk individuals pathogenic genetic variants (PGVs). Penetrance refers probability individual carrying specific genetic variant develop associated trait, cancer. Estimating probability crucial step clinical decision-making personalized risk assessment hereditary (cancer) syndromes. package leverages Mendelian inheritance models, widely used family-based genetic studies assess genetic variants passed generations. models typically involve —individual family history genetic data collected. proband serves starting point mapping family’s genetic structure, including relationships phenotypic traits, cancer diagnoses. Family data, including cancer occurrence, ages diagnosis, genetic test results, collected proband relatives. Using data, Mendelian models compute likelihood certain genetic configurations disease outcomes based inheritance patterns. core methodology package relies four-parameter Weibull distribution model age-specific penetrance. Estimation performed using Bayesian framework Markov Chain Monte Carlo (MCMC) methods, allowing package provide robust flexible penetrance estimates. approach, package models likelihood cancer occurrence across family members, even genotypic information missing incomplete, common real-world studies. package also incorporates prior knowledge estimation process, enabling users specify default, custom, study-based prior distributions. employing Elston-Stewart peeling algorithm, package efficiently calculates likelihoods across family pedigrees, ensuring scalability accuracy, even large datasets. providing user-friendly functions data input, prior specification, estimation, package equips researchers clinicians powerful tool estimating cancer risk complex family-based studies. empowers informed decision-making preventive strategies hereditary cancer syndromes, understanding genetic basis risk critical patient care.","code":""},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"install, use Open source directory new R project install package directly R studio","code":"git clone git@github.com:nicokubi/penetrance.git devtools::install() devtools::install_github(\"https://github.com/nicokubi/penetrance\")"},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"quick-start-guide","dir":"","previous_headings":"","what":"Quick-start guide","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"following quick-start guide basic usage package. greater detail options, please refer articles. primary function package penetrance. package workflow includes three main parts: user input, including family data form pedigrees specification penetrance estimation, estimation posterior distribution using MCMC approach, outputting results form samples approximated posterior distribution, .e. estimated penetrance function.","code":"library(penetrance)"},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"pedigree","dir":"","previous_headings":"Quick-start guide","what":"Pedigree","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"user must specify pedigree argument data frame contains family data (see test_family_1). family data must correct format following columns: ID: numeric value representing unique identifier individual. duplicated entries. Sex: numeric value 0 indicates female 1 indicates male. Unknown sex needs coded NA. MotherID: numeric value representing unique identifier individual’s mother. FatherID: numeric value representing unique identifier individual’s father. isProband: numeric value 1 indicates individual proband 0 otherwise. CurAge: numeric value indicating age censoring (current age person alive age death person deceased). Allowed ages range 1 94. Unknown ages can left empty coded NA. isAff: numeric value indicating affection status cancer, 1 diagnosed individuals 0 otherwise. Missing entries supported. Age: numeric value indicating age cancer diagnosis, encoded NA individual diagnosed. Allowed ages range 1 94. Unknown ages can left empty coded NA. geno: column germline testing tumor marker testing results. Positive results coded 1, negative results 0, unknown results NA left empty.","code":""},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"model-specification","dir":"","previous_headings":"Quick-start guide","what":"Model specification","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"ways user can specify estimation approach run. Available options :","code":"#' @param pedigree A data frame containing the pedigree data in the required format. It should include the following columns: #'   - `PedigreeID`:  A numeric value representing the unique identifier for each family. There should be no duplicated entries. #'   - `ID`: A numeric value representing the unique identifier for each individual. There should be no duplicated entries. #'   - `Sex`: A numeric value where `0` indicates female and `1` indicates male. Unknown sex needs to be coded as `NA`.  #'   - `MotherID`: A numeric value representing the unique identifier for an individual's mother. #'   - `FatherID`: A numeric value representing the unique identifier for an individual's father. #'   - `isProband`: A numeric value where `1` indicates the individual is a proband and `0` otherwise. #'   - `CurAge`: A numeric value indicating the age of censoring (current age if the person is alive or age at death if the person is deceased). Allowed ages range from `1` to `94`. Unknown ages can be left empty or coded as `NA`.  #'   - `isAff`: A numeric value indicating the affection status of cancer, with `1` for diagnosed individuals and `0` otherwise. Missing entries are not supported. #'   - `Age`: A numeric value indicating the age of cancer diagnosis, encoded as `NA` if the individual was not diagnosed. Allowed ages range from `1` to `94`. Unknown ages can be left empty or coded as `NA`.  #'   - `geno`: A column for germline testing or tumor marker testing results. Positive results should be coded as `1`, negative results as `0`, and unknown results as `NA` or left empty. #' @param twins A list specifying identical twins or triplets in the family. For example, to indicate that \"ora024\" and \"ora027\" are identical twins, and \"aey063\" and \"aey064\" are identical twins, use the following format: `twins <- list(c(\"ora024\", \"ora027\"), c(\"aey063\", \"aey064\"))`. #' @param n_chains Integer, the number of chains for parallel computation. Default is 1. #' @param n_iter_per_chain Integer, the number of iterations for each chain. Default is 10000. #' @param ncores Integer, the number of cores for parallel computation. Default is 6. #' @param baseline_data Data for the baseline risk estimates (probability of developing cancer), such as population-level risk from a cancer registry. Default data, for exemplary purposes, is for Colorectal cancer from the SEER database. #' @param max_age Integer, the maximum age considered for analysis. Default is 94. #' @param remove_proband Logical, indicating whether to remove probands from the analysis. Default is FALSE. #' @param age_imputation Logical, indicating whether to perform age imputation. Default is FALSE. #' @param median_max Logical, indicating whether to use the baseline median age or `max_age` as an upper bound for the median proposal. Default is TRUE. #' @param BaselineNC Logical, indicating that the non-carrier penetrance is assumed to be the baseline penetrance. Default is TRUE. #' @param var Numeric vector, variances for the proposal distribution in the Metropolis-Hastings algorithm. Default is `c(0.1, 0.1, 2, 2, 5, 5, 5, 5)`. #' @param burn_in Numeric, the fraction of results to discard as burn-in (0 to 1). Default is 0 (no burn-in). #' @param thinning_factor Integer, the factor by which to thin the results. Default is 1 (no thinning). #' @param imp_interval Integer, the interval at which age imputation should be performed when age_imputation = TRUE. #' @param distribution_data Data for generating prior distributions. #' @param prev Numeric, prevalence of the carrier status. Default is 0.0001. #' @param sample_size Optional numeric, sample size for distribution generation. #' @param ratio Optional numeric, ratio parameter for distribution generation. #' @param prior_params List, parameters for prior distributions. #' @param risk_proportion Numeric, proportion of risk for distribution generation. #' @param summary_stats Logical, indicating whether to include summary statistics in the output. Default is TRUE. #' @param rejection_rates Logical, indicating whether to include rejection rates in the output. Default is TRUE. #' @param density_plots Logical, indicating whether to include density plots in the output. Default is TRUE. #' @param plot_trace Logical, indicating whether to include trace plots in the output. Default is TRUE. #' @param penetrance_plot Logical, indicating whether to include penetrance plots in the output. Default is TRUE. #' @param penetrance_plot_pdf Logical, indicating whether to include PDF plots in the output. Default is TRUE. #' @param plot_loglikelihood Logical, indicating whether to include log-likelihood plots in the output. Default is TRUE. #' @param plot_acf Logical, indicating whether to include autocorrelation function (ACF) plots for posterior samples. Default is TRUE. #' @param probCI Numeric, probability level for credible intervals in penetrance plots. Must be between 0 and 1. Default is 0.95. #' @param sex_specific Logical, indicating whether to use sex-specific parameters in the analysis. Default is TRUE."},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"prior-specification","dir":"","previous_headings":"Quick-start guide","what":"Prior Specification","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"Penetrance provides user flexible approach prior specification, balancing customization easy--use workflow. addition providing default prior distributions, package allows users customize priors including existing penetrance estimates prior knowledge. following settings prior distribution specification available:","code":""},{"path":"https://nicokubi.github.io/penetrance/index.html","id":"additional-user-inputs","dir":"","previous_headings":"Quick-start guide","what":"Additional User Inputs","title":"Methods for Penetrance Estimation in Family-Based Studies","text":"PenEstim function takes baseline age-specific probabilitie developing cancer input baseline_data. default setting BaselineNC = TRUE baseline assumed reflect non-carrier penetrance. rare mutations considered reasonable assumption. baseline_data must data frame baseline data females males. Furthermore specification prevalence carrier status (prev) required. rare autosomal dominant conditions, prevalence = 2 * allele frequency. PenEsim also includes option automatic age imputation AgeImputation. apply age imputation part MCMC routine. imputation ages performed based individual’s affected status (affaff), sex (sexsex), degree relationship proband carrier PV. greater detail age imputation approach see documentation. likelihood calculation monozygous twins can specified using twins arguement.","code":"twins <- list(c(\"ora024\", \"ora027\"), c(\"aey063\", \"aey064\"))"},{"path":"https://nicokubi.github.io/penetrance/reference/absValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return absolute values — absValue","title":"Function to return absolute values — absValue","text":"Function return absolute values","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/absValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return absolute values — absValue","text":"","code":"absValue(x)"},{"path":"https://nicokubi.github.io/penetrance/reference/absValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return absolute values — absValue","text":"x Numeric, input value.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/absValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return absolute values — absValue","text":"Numeric, absolute value input.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/apply_burn_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Burn-In — apply_burn_in","title":"Apply Burn-In — apply_burn_in","text":"Apply Burn-","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/apply_burn_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Burn-In — apply_burn_in","text":"","code":"apply_burn_in(results, burn_in)"},{"path":"https://nicokubi.github.io/penetrance/reference/apply_burn_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Burn-In — apply_burn_in","text":"results list MCMC chain results. burn_in fraction roportion results discard burn-(0 1). default burn-, burn_in=0.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/apply_burn_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Burn-In — apply_burn_in","text":"list results burn-applied.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/apply_thinning.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Thinning — apply_thinning","title":"Apply Thinning — apply_thinning","text":"Apply Thinning","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/apply_thinning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Thinning — apply_thinning","text":"","code":"apply_thinning(results, thinning_factor)"},{"path":"https://nicokubi.github.io/penetrance/reference/apply_thinning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Thinning — apply_thinning","text":"results list MCMC chain results. thinning_factor factor thin results (positive integer). default thinning factor 1, implies thinning.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/apply_thinning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Thinning — apply_thinning","text":"list results thinning applied.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/baseline_data_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Baseline Data — baseline_data_default","title":"Default Baseline Data — baseline_data_default","text":"dataset contains age-specific cancer penetrance rates females males. example, data derived SEER program colorectal cancer females males.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/baseline_data_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Baseline Data — baseline_data_default","text":"","code":"baseline_data_default  baseline_data_default"},{"path":"https://nicokubi.github.io/penetrance/reference/baseline_data_default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default Baseline Data — baseline_data_default","text":"data frame 94 rows 3 variables: Age Age years Female Female baseline risk Male Male baseline risk data frame 94 rows 3 variables: Age Age years (1 94) Female Penetrance rate females Male Penetrance rate males","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateBaseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Baseline Risk — calculateBaseline","title":"Calculate Baseline Risk — calculateBaseline","text":"function extracts penetrance data specified cancer type, gene, race, penetrance type provided database.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateBaseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Baseline Risk — calculateBaseline","text":"","code":"calculateBaseline(cancer_type, gene, race, type, db)"},{"path":"https://nicokubi.github.io/penetrance/reference/calculateBaseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Baseline Risk — calculateBaseline","text":"cancer_type type cancer risk calculated. gene gene interest risk calculated. race race individual. type type penetrance calculation. db dataset used calculation, containing penetrance data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateBaseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Baseline Risk — calculateBaseline","text":"matrix penetrance data specified parameters.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateEmpiricalDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Empirical Age Density — calculateEmpiricalDensity","title":"Calculate Empirical Age Density — calculateEmpiricalDensity","text":"Calculates empirical age density distributions different subgroups data, separated sex genetic testing status.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateEmpiricalDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Empirical Age Density — calculateEmpiricalDensity","text":"","code":"calculateEmpiricalDensity(   data,   aff_column = \"aff\",   age_column = \"age\",   sex_column = \"sex\",   geno_column = \"geno\",   n_points = 10000,   sex_specific = TRUE )"},{"path":"https://nicokubi.github.io/penetrance/reference/calculateEmpiricalDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Empirical Age Density — calculateEmpiricalDensity","text":"data data frame containing family data aff_column Name affection status column age_column Name age column sex_column Name sex column geno_column Name genotype column n_points Number points use density estimation sex_specific Logical; whether calculate sex-specific densities","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateEmpiricalDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Empirical Age Density — calculateEmpiricalDensity","text":"list density objects different subgroups (tested/untested, male/female)","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateNCPen.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Age-Specific Non-Carrier Penetrance — calculateNCPen","title":"Calculate Age-Specific Non-Carrier Penetrance — calculateNCPen","text":"function calculates age-specific non-carrier penetrance based SEER baseline data, penetrances carriers, allele frequencies. adjusts penetrance estimates genetic testing incorporating genetic risk attributable specified alleles.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateNCPen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Age-Specific Non-Carrier Penetrance — calculateNCPen","text":"","code":"calculateNCPen(SEER_baseline, alpha, beta, delta, gamma, prev, max_age)"},{"path":"https://nicokubi.github.io/penetrance/reference/calculateNCPen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Age-Specific Non-Carrier Penetrance — calculateNCPen","text":"SEER_baseline Numeric, baseline penetrance derived SEER data general population without considering genetic risk factors. alpha Numeric, shape parameter Weibull distribution used model carrier risk. beta Numeric, scale parameter Weibull distribution used model carrier risk. delta Numeric, location parameter Weibull distribution used model carrier risk. gamma Numeric, scaling factor applied Weibull distribution adjust carrier risk. prev Numeric, prevalence risk allele population. max_age Integer, maximum age calculations performed.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculateNCPen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Age-Specific Non-Carrier Penetrance — calculateNCPen","text":"list containing: weightedCarrierRisk Numeric vector, weighted risk carriers age based prevalence. yearlyProb Numeric vector, yearly probability getting disease age. cumulativeProb Numeric vector, cumulative probability getting disease age.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculate_weibull_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Weibull Parameters — calculate_weibull_parameters","title":"Calculate Weibull Parameters — calculate_weibull_parameters","text":"function calculates shape (alpha) scale (beta) parameters Weibull distribution given median, first quartile, delta values.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculate_weibull_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Weibull Parameters — calculate_weibull_parameters","text":"","code":"calculate_weibull_parameters(given_median, given_first_quartile, delta)"},{"path":"https://nicokubi.github.io/penetrance/reference/calculate_weibull_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Weibull Parameters — calculate_weibull_parameters","text":"given_median median data. given_first_quartile first quartile data. delta constant offset value.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculate_weibull_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Weibull Parameters — calculate_weibull_parameters","text":"list containing calculated Weibull parameters: alpha shape parameter Weibull distribution beta scale parameter Weibull distribution","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/calculate_weibull_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Weibull Parameters — calculate_weibull_parameters","text":"","code":"# Calculate Weibull parameters params <- calculate_weibull_parameters(   given_median = 50,   given_first_quartile = 30,   delta = 15 ) print(params) #> $alpha #> [1] 1.037872 #>  #> $beta #> [1] 49.82351 #>"},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Chains Function to combine the posterior samples from the multiple chains. — combine_chains","title":"Combine Chains Function to combine the posterior samples from the multiple chains. — combine_chains","text":"Combine Chains Function combine posterior samples multiple chains.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Chains Function to combine the posterior samples from the multiple chains. — combine_chains","text":"","code":"combine_chains(results)"},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Chains Function to combine the posterior samples from the multiple chains. — combine_chains","text":"results list MCMC chain results.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Chains Function to combine the posterior samples from the multiple chains. — combine_chains","text":"list combined results, including median, threshold, first quartile, asymptote values.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains_noSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Chains for Non-Sex-Specific Estimation — combine_chains_noSex","title":"Combine Chains for Non-Sex-Specific Estimation — combine_chains_noSex","text":"Combines posterior samples multiple MCMC chains non-sex-specific estimations.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains_noSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Chains for Non-Sex-Specific Estimation — combine_chains_noSex","text":"","code":"combine_chains_noSex(results)"},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains_noSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Chains for Non-Sex-Specific Estimation — combine_chains_noSex","text":"results list MCMC chain results, element contains posterior samples parameters.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/combine_chains_noSex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Chains for Non-Sex-Specific Estimation — combine_chains_noSex","text":"list combined results, including samples median, threshold, first quartile, asymptote values, log-likelihoods, log-acceptance ratios.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/distribution_data_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Distribution Data — distribution_data_default","title":"Default Distribution Data — distribution_data_default","text":"Default data frame structure row names use makePriors function.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/distribution_data_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Distribution Data — distribution_data_default","text":"","code":"distribution_data_default  distribution_data_default"},{"path":"https://nicokubi.github.io/penetrance/reference/distribution_data_default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default Distribution Data — distribution_data_default","text":"data frame prior distribution parameters data frame following columns: age Age values (NA default). at_risk Proportion people risk (NA default).","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/drawBaseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Ages Using the Inverse CDF Method from the baseline data — drawBaseline","title":"Draw Ages Using the Inverse CDF Method from the baseline data — drawBaseline","text":"function draws ages using inverse CDF method baseline data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/drawBaseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Ages Using the Inverse CDF Method from the baseline data — drawBaseline","text":"","code":"drawBaseline(baseline_data)"},{"path":"https://nicokubi.github.io/penetrance/reference/drawBaseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Ages Using the Inverse CDF Method from the baseline data — drawBaseline","text":"baseline_data data frame containing baseline data columns 'cum_prob' 'age'.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/drawBaseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Ages Using the Inverse CDF Method from the baseline data — drawBaseline","text":"single age value drawn baseline data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/drawEmpirical.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Ages Using the Inverse CDF Method from Empirical Density — drawEmpirical","title":"Draw Ages Using the Inverse CDF Method from Empirical Density — drawEmpirical","text":"function draws ages using inverse CDF method empirical density data, based sex whether individual tested.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/drawEmpirical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Ages Using the Inverse CDF Method from Empirical Density — drawEmpirical","text":"","code":"drawEmpirical(empirical_density, sex, tested, sex_specific = TRUE)"},{"path":"https://nicokubi.github.io/penetrance/reference/drawEmpirical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Ages Using the Inverse CDF Method from Empirical Density — drawEmpirical","text":"empirical_density list density objects containing empirical density ages different groups. sex Numeric, sex individual (1 male, 2 female). tested Logical, indicating whether individual tested (non-NA 'geno' value). sex_specific Logical, indicating whether imputation sex-specific. Default TRUE.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/drawEmpirical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Ages Using the Inverse CDF Method from Empirical Density — drawEmpirical","text":"single age value drawn appropriate empirical density data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_density_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Posterior Density Plots — generate_density_plots","title":"Generate Posterior Density Plots — generate_density_plots","text":"Generates histograms posterior samples different parameters","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_density_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Posterior Density Plots — generate_density_plots","text":"","code":"generate_density_plots(data)"},{"path":"https://nicokubi.github.io/penetrance/reference/generate_density_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Posterior Density Plots — generate_density_plots","text":"data list combined results.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_density_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Posterior Density Plots — generate_density_plots","text":"return value, called side effects. Creates density plots parameter.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_density_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Posterior Density Plots — generate_density_plots","text":"","code":"# Create example data data <- list(   median_male_results = rnorm(1000, 50, 5),   median_female_results = rnorm(1000, 45, 5),   threshold_male_results = runif(1000, 20, 30),   threshold_female_results = runif(1000, 25, 35),   asymptote_male_results = rbeta(1000, 2, 2),   asymptote_female_results = rbeta(1000, 2, 2) )  # Generate density plots old_par <- par(no.readonly = TRUE)  # Save old par settings generate_density_plots(data)  par(old_par)  # Restore old par settings"},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary — generate_summary","title":"Generate Summary — generate_summary","text":"Function generate summary statistics","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary — generate_summary","text":"","code":"generate_summary(data, verbose = FALSE)"},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary — generate_summary","text":"data list combined results. verbose Logical, whether print summary console. Default FALSE.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary — generate_summary","text":"data.frame containing summary statistics (min, 1st quartile, median, mean, 3rd quartile, max) parameter.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary_noSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summary for Non-Sex-Specific Estimation — generate_summary_noSex","title":"Generate Summary for Non-Sex-Specific Estimation — generate_summary_noSex","text":"Generates summary statistics combined MCMC results non-sex-specific estimations.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary_noSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summary for Non-Sex-Specific Estimation — generate_summary_noSex","text":"","code":"generate_summary_noSex(data, verbose = FALSE)"},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary_noSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summary for Non-Sex-Specific Estimation — generate_summary_noSex","text":"data list containing combined results MCMC chains, typically output combine_chains_noSex. verbose Logical, whether print summary console. Default FALSE.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/generate_summary_noSex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summary for Non-Sex-Specific Estimation — generate_summary_noSex","text":"data.frame containing summary statistics (min, 1st quartile, median, mean, 3rd quartile, max) median, threshold, first quartile, asymptote values.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAges.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Ages in Family-Based Data — imputeAges","title":"Impute Missing Ages in Family-Based Data — imputeAges","text":"Imputes missing ages family-based data using combination Weibull distributions affected individuals empirical distributions unaffected individuals. function can perform sex-specific non-sex-specific imputations.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Ages in Family-Based Data — imputeAges","text":"","code":"imputeAges(   data,   na_indices,   baseline_male = NULL,   baseline_female = NULL,   alpha_male = NULL,   beta_male = NULL,   delta_male = NULL,   alpha_female = NULL,   beta_female = NULL,   delta_female = NULL,   baseline = NULL,   alpha = NULL,   beta = NULL,   delta = NULL,   max_age,   sex_specific = TRUE,   max_attempts = 100,   geno_freq,   trans,   lik )"},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Ages in Family-Based Data — imputeAges","text":"data data frame containing family-based data columns: family, individual, father, mother, sex, aff, age, geno, isProband na_indices Vector indices ages need imputed baseline_male, baseline_female Data frames containing baseline age distributions males/females alpha_male, alpha_female Shape parameters male/female Weibull distributions beta_male, beta_female Scale parameters male/female Weibull distributions delta_male, delta_female Location parameters male/female Weibull distributions baseline Data frame containing overall baseline age distribution (non-sex-specific) alpha, beta, delta Overall Weibull parameters (non-sex-specific) max_age Maximum allowable age sex_specific Logical; whether use sex-specific parameters max_attempts Maximum number attempts generating valid ages geno_freq Vector genotype frequencies trans Transmission probabilities lik Likelihood matrix","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Ages in Family-Based Data — imputeAges","text":"data frame following modifications: age Updated imputed ages previously missing values rest data frame remains unchanged.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Missing Ages in Family-Based Data — imputeAges","text":"","code":"# Create sample data with the same structure as used in mhChain data <- data.frame(   family = rep(1:2, each=5),   individual = rep(1:5, 2),   father = c(NA,1,1,1,1, NA,6,6,6,6),   mother = c(NA,2,2,2,2, NA,7,7,7,7),   sex = c(1,2,1,2,1, 1,2,1,2,1),   aff = c(1,0,1,0,NA, 1,0,1,0,NA),   age = c(45,NA,25,NA,20, 50,NA,30,NA,22),   geno = c(\"1/2\",NA,\"1/2\",NA,NA, \"1/2\",NA,\"1/2\",NA,NA),   isProband = c(1,0,0,0,0, 1,0,0,0,0) )  # Initialize parameters na_indices <- which(is.na(data$age)) geno_freq <- c(0.999, 0.001)  # Frequency of normal and risk alleles trans <- matrix(c(1,0,0.5,0.5), nrow=2)  # Transmission matrix lik <- matrix(1, nrow=nrow(data), ncol=2)  # Likelihood matrix  # Create baseline data for both sex-specific and non-sex-specific cases age_range <- 20:94 n_ages <- length(age_range)  # Sex-specific baseline data baseline_male <- data.frame(   age = age_range,   cum_prob = (1:n_ages)/n_ages * 0.8  # Male cumulative probabilities )  baseline_female <- data.frame(   age = age_range,   cum_prob = (1:n_ages)/n_ages * 0.9  # Female cumulative probabilities )  # Non-sex-specific baseline data baseline <- data.frame(   age = age_range,   cum_prob = (1:n_ages)/n_ages * 0.85  # Overall cumulative probabilities )  # Example with sex-specific imputation imputed_data_sex <- imputeAges(   data = data,   na_indices = na_indices,   baseline_male = baseline_male,   baseline_female = baseline_female,   alpha_male = 3.5,   beta_male = 20,   delta_male = 20,   alpha_female = 3.2,   beta_female = 18,   delta_female = 18,   max_age = 94,   sex_specific = TRUE,   geno_freq = geno_freq,   trans = trans,   lik = lik )  # Example with non-sex-specific imputation imputed_data_nosex <- imputeAges(   data = data,   na_indices = na_indices,   baseline = baseline,   alpha = 3.3,   beta = 19,   delta = 19,   max_age = 94,   sex_specific = FALSE,   geno_freq = geno_freq,   trans = trans,   lik = lik )"},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAgesInit.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Age Imputation — imputeAgesInit","title":"Initialize Age Imputation — imputeAgesInit","text":"Initializes age imputation process filling missing ages random values threshold maximum age.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAgesInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Age Imputation — imputeAgesInit","text":"","code":"imputeAgesInit(data, threshold, max_age)"},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAgesInit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Age Imputation — imputeAgesInit","text":"data data frame containing family-based data threshold Minimum age value initialization max_age Maximum age value initialization","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAgesInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Age Imputation — imputeAgesInit","text":"list containing: data data frame initialized ages na_indices Indices missing age values","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeAgesInit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Age Imputation — imputeAgesInit","text":"","code":"# Create sample data data <- data.frame(   family = c(1, 1),   individual = c(1, 2),   father = c(NA, 1),   mother = c(NA, NA),   sex = c(1, 2),   aff = c(1, 0),   age = c(NA, NA),   geno = c(\"1/2\", NA),   isProband = c(1, 0) )  # Initialize ages with random values between 20 and 94 result <- imputeAgesInit(data, threshold = 20, max_age = 94)  # Access the results imputed_data <- result$data missing_indices <- result$na_indices"},{"path":"https://nicokubi.github.io/penetrance/reference/imputeUnaffectedAges.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Ages for Unaffected Individuals — imputeUnaffectedAges","title":"Impute Ages for Unaffected Individuals — imputeUnaffectedAges","text":"function imputes ages unaffected individuals dataset based sex whether tested, using empirical age distributions.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeUnaffectedAges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Ages for Unaffected Individuals — imputeUnaffectedAges","text":"","code":"imputeUnaffectedAges(data, na_indices, empirical_density, max_age)"},{"path":"https://nicokubi.github.io/penetrance/reference/imputeUnaffectedAges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Ages for Unaffected Individuals — imputeUnaffectedAges","text":"data data frame containing individual data, including columns age, sex, geno. na_indices vector indices indicating rows data ages need imputed. empirical_density list density objects containing empirical density ages different groups. max_age Integer, maximum age considered analysis.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/imputeUnaffectedAges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Ages for Unaffected Individuals — imputeUnaffectedAges","text":"data frame imputed ages unaffected individuals.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/lik.fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Penetrance Function — lik.fn","title":"Penetrance Function — lik.fn","text":"Calculates penetrance individual based Weibull distribution parameters. function estimates probability developing cancer given individual's genetic demographic information.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/lik.fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Penetrance Function — lik.fn","text":"","code":"lik.fn(   i,   data,   alpha_male,   alpha_female,   beta_male,   beta_female,   delta_male,   delta_female,   gamma_male,   gamma_female,   max_age,   baselineRisk,   BaselineNC,   prev )"},{"path":"https://nicokubi.github.io/penetrance/reference/lik.fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Penetrance Function — lik.fn","text":"Integer, index individual data set. data Data frame, containing individual demographic genetic information. Must include columns 'sex', 'age', 'aff' (affection status), 'geno' (genotype). alpha_male Numeric, Weibull distribution shape parameter males. alpha_female Numeric, Weibull distribution shape parameter females. beta_male Numeric, Weibull distribution scale parameter males. beta_female Numeric, Weibull distribution scale parameter females. delta_male Numeric, shift parameter Weibull function males. delta_female Numeric, shift parameter Weibull function females. gamma_male Numeric, asymptote parameter males (scales entire distribution). gamma_female Numeric, asymptote parameter females (scales entire distribution). max_age Integer, maximum age considered analysis. baselineRisk Numeric matrix, baseline risk age sex. Rows correspond sex (1 male, 2 female) columns age. BaselineNC Logical, indicates non-carrier penetrance based SEER data. prev Numeric, prevalence risk allele population.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/lik.fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Penetrance Function — lik.fn","text":"Numeric vector, containing penetrance values unaffected affected individuals.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/lik_noSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Calculation without Sex Differentiation — lik_noSex","title":"Likelihood Calculation without Sex Differentiation — lik_noSex","text":"function calculates likelihood individual based Weibull distribution parameters without considering sex differentiation.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/lik_noSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Calculation without Sex Differentiation — lik_noSex","text":"","code":"lik_noSex(   i,   data,   alpha,   beta,   delta,   gamma,   max_age,   baselineRisk,   BaselineNC,   prev )"},{"path":"https://nicokubi.github.io/penetrance/reference/lik_noSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Calculation without Sex Differentiation — lik_noSex","text":"Integer, index individual data set. data Data frame, containing individual demographic genetic information. Must include columns 'age', 'aff' (affection status), 'geno' (genotype). alpha Numeric, Weibull distribution shape parameter. beta Numeric, Weibull distribution scale parameter. delta Numeric, shift parameter Weibull function. gamma Numeric, asymptote parameter (scales entire distribution). max_age Integer, maximum age considered analysis. baselineRisk Numeric vector, baseline risk age. BaselineNC Logical, indicates non-carrier penetrance based SEER data calculated non-carrier penetrance. prev Numeric, prevalence risk allele population.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/lik_noSex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Calculation without Sex Differentiation — lik_noSex","text":"Numeric vector, containing likelihood values unaffected affected individuals.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/makePriors.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Priors — makePriors","title":"Make Priors — makePriors","text":"function generates prior distributions based user input default parameters. designed aid statistical analysis risk proportions populations, particularly context cancer research. distributions calculated various statistical metrics asymptote, threshold, median, first quartile.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/makePriors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Priors — makePriors","text":"","code":"makePriors(   data,   sample_size,   ratio,   prior_params,   risk_proportion,   baseline_data )"},{"path":"https://nicokubi.github.io/penetrance/reference/makePriors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Priors — makePriors","text":"data data frame containing age risk data. NULL contains NA values, default parameters used. sample_size Numeric, total sample size used risk proportion calculations. ratio Numeric, odds ratio () relative risk (RR) used asymptote parameter calculations. prior_params List, containing prior parameters beta distributions. NULL, default parameters used. risk_proportion Data frame, default proportions people risk. baseline_data Data frame baseline risk data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/makePriors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Priors — makePriors","text":"list functions representing prior distributions asymptote, threshold, median, first quartile.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/makePriors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Priors — makePriors","text":"function includes internal helper functions normalizing median first quartile values, computing beta distribution parameters. function handles various settings: using default parameters, applying user inputs, calculating parameters based sample size risk proportions. /RR ratio provided, asymptote parameters computed based ratio, overriding inputs asymptote. function returns list distribution functions asymptote, threshold, median, first quartile, can used statistical analysis.","code":""},{"path":[]},{"path":"https://nicokubi.github.io/penetrance/reference/mhChain.html","id":null,"dir":"Reference","previous_headings":"","what":"Execution of a Single Chain in Metropolis-Hastings for Cancer Risk Estimation — mhChain","title":"Execution of a Single Chain in Metropolis-Hastings for Cancer Risk Estimation — mhChain","text":"Performs single chain execution Metropolis-Hastings algorithm Bayesian inference, specifically tailored cancer risk estimation. function can handle sex-specific non-sex-specific scenarios.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhChain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execution of a Single Chain in Metropolis-Hastings for Cancer Risk Estimation — mhChain","text":"","code":"mhChain(   seed,   n_iter,   burn_in,   chain_id,   ncores,   data,   twins,   max_age,   baseline_data,   prior_distributions,   prev,   median_max,   BaselineNC,   var,   age_imputation,   imp_interval,   remove_proband,   sex_specific )"},{"path":"https://nicokubi.github.io/penetrance/reference/mhChain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execution of a Single Chain in Metropolis-Hastings for Cancer Risk Estimation — mhChain","text":"seed Integer, seed random number generator ensure reproducibility. n_iter Integer, number iterations perform Metropolis-Hastings algorithm. burn_in Integer, number initial iterations discard (burn-period). chain_id Integer, identifier chain executed. ncores Integer, number cores use parallel computation. data Data frame, containing family genetic information used analysis. twins Information monozygous twins triplets pedigrees. max_age Integer, maximum age considered analysis. baseline_data Numeric matrix vector, containing baseline risk estimates different ages sexes. prior_distributions List, containing prior distributions parameters estimated. prev Numeric, prevalence risk allele population. median_max Logical, indicates maximum median age used Weibull distribution. BaselineNC Logical, indicates non-carrier penetrance based SEER data. var Numeric, variance proposal distribution Metropolis-Hastings algorithm. age_imputation Logical, indicates age imputation performed. imp_interval Integer, interval age imputation performed age_imputation = TRUE. remove_proband Logical, indicates proband removed analysis. sex_specific Logical, indicates analysis differentiate sex.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhChain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execution of a Single Chain in Metropolis-Hastings for Cancer Risk Estimation — mhChain","text":"list containing samples, log likelihoods, log-acceptance ratio, rejection rate iteration.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhChain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execution of a Single Chain in Metropolis-Hastings for Cancer Risk Estimation — mhChain","text":"","code":"# Create sample data in PanelPRO format data <- data.frame(   ID = 1:10,   PedigreeID = rep(1, 10),   Sex = c(0, 1, 0, 1, 0, 1, 0, 1, 0, 1), # 0=female, 1=male   MotherID = c(NA, NA, 1, 1, 3, 3, 5, 5, 7, 7),   FatherID = c(NA, NA, 2, 2, 4, 4, 6, 6, 8, 8),   isProband = c(1, rep(0, 9)),   CurAge = c(45, 35, 55, 40, 50, 45, 60, 38, 52, 42),   isAff = c(1, 0, 1, 0, 1, 0, 1, 0, 1, 0),   Age = c(40, NA, 50, NA, 45, NA, 55, NA, 48, NA),   Geno = c(1, NA, 1, 0, 1, 0, NA, NA, 1, NA) )  # Transform data into required format data <- transformDF(data)  # Set parameters for the chain seed <- 123 n_iter <- 10 burn_in <- 0.1 # 10% burn-in chain_id <- 1 ncores <- 1 max_age <- 100  # Create baseline data (simplified example) baseline_data <- matrix(   c(rep(0.005, max_age), rep(0.008, max_age)), # Increased baseline risks   ncol = 2,   dimnames = list(NULL, c(\"Male\", \"Female\")) )  # Set prior distributions with carefully chosen bounds prior_distributions <- list(   prior_params = list(     asymptote = list(g1 = 2, g2 = 3), # Mode around 0.4     threshold = list(min = 20, max = 30), # Narrower range for threshold     median = list(m1 = 3, m2 = 2), # Mode around 0.6     first_quartile = list(q1 = 2, q2 = 3) # Mode around 0.4   ) )  # Create variance vector for all 8 parameters in sex-specific case # Using very small variances for initial stability var <- c(   0.005, 0.005, # asymptotes (smaller variance since between 0-1)   1, 1, # thresholds   1, 1, # medians   1, 1 ) # first quartiles  # Run the chain results <- mhChain(   seed = seed,   n_iter = n_iter,   burn_in = burn_in,   chain_id = chain_id,   ncores = ncores,   data = data,   twins = NULL,   max_age = max_age,   baseline_data = baseline_data,   prior_distributions = prior_distributions,   prev = 0.05, # Increased prevalence   median_max = FALSE, # Changed to FALSE for simpler median constraints   BaselineNC = TRUE,   var = var,   age_imputation = FALSE,   imp_interval = 10,   remove_proband = TRUE,   sex_specific = TRUE ) #> Starting Chain 1"},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Log Likelihood using clipp Package — mhLogLikelihood_clipp","title":"Calculate Log Likelihood using clipp Package — mhLogLikelihood_clipp","text":"Calculate Log Likelihood using clipp Package","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Log Likelihood using clipp Package — mhLogLikelihood_clipp","text":"","code":"mhLogLikelihood_clipp(   paras,   families,   twins,   max_age,   baseline_data,   prev,   geno_freq,   trans,   BaselineNC,   ncores )"},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Log Likelihood using clipp Package — mhLogLikelihood_clipp","text":"paras Numeric vector parameters families Data frame pedigree information twins Information monozygous twins max_age Integer, maximum age baseline_data Numeric matrix baseline risk data prev Numeric, prevalence geno_freq Numeric vector frequencies trans Numeric matrix transmission probabilities BaselineNC Logical baseline choice ncores Integer parallel computation","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Log Likelihood using clipp Package — mhLogLikelihood_clipp","text":"Numeric value representing calculated log likelihood.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Log Likelihood using clipp Package — mhLogLikelihood_clipp","text":"","code":"# Create example parameters and data paras <- c(0.8, 0.7, 20, 25, 50, 45, 30, 35)  # Example parameters  # Create sample data in PanelPRO format families <- data.frame(   ID = 1:10,   PedigreeID = rep(1, 10),   Sex = c(0, 1, 0, 1, 0, 1, 0, 1, 0, 1),  # 0=female, 1=male   MotherID = c(NA, NA, 1, 1, 3, 3, 5, 5, 7, 7),   FatherID = c(NA, NA, 2, 2, 4, 4, 6, 6, 8, 8),   isProband = c(1, rep(0, 9)),   CurAge = c(45, 35, 55, 40, 50, 45, 60, 38, 52, 42),   isAff = c(1, 0, 1, 0, 1, 0, 1, 0, 1, 0),   Age = c(40, NA, 50, NA, 45, NA, 55, NA, 48, NA),   Geno = c(1, NA, 1, 0, 1, 0, NA, NA, 1, NA) )  # Transform data into required format families <- transformDF(families)  trans <- matrix(   c(     1, 0, # both parents are wild type     0.5, 0.5, # mother is wildtype and father is a heterozygous carrier     0.5, 0.5, # father is wildtype and mother is a heterozygous carrier     1 / 3, 2 / 3 # both parents are heterozygous carriers   ),  nrow = 4, ncol = 2, byrow = TRUE )  # Calculate log likelihood loglik <- mhLogLikelihood_clipp(   paras = paras,   families = families,   twins = NULL,   max_age = 94,   baseline_data = baseline_data_default,   prev = 0.001,   geno_freq = c(0.999, 0.001),   trans = trans,   BaselineNC = TRUE,   ncores = 1 )"},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp_noSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Log Likelihood without Sex Differentiation — mhLogLikelihood_clipp_noSex","title":"Calculate Log Likelihood without Sex Differentiation — mhLogLikelihood_clipp_noSex","text":"function calculates log likelihood set parameters data without considering sex differentiation using clipp package.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp_noSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Log Likelihood without Sex Differentiation — mhLogLikelihood_clipp_noSex","text":"","code":"mhLogLikelihood_clipp_noSex(   paras,   families,   twins,   max_age,   baseline_data,   prev,   geno_freq,   trans,   BaselineNC,   ncores )"},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp_noSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Log Likelihood without Sex Differentiation — mhLogLikelihood_clipp_noSex","text":"paras Numeric vector, parameters Weibull distribution scaling factors. contain order: gamma, delta, given_median, given_first_quartile. families Data frame, containing pedigree information columns 'age', 'aff' (affection status), 'geno' (genotype). twins Information monozygous twins triplets pedigrees. max_age Integer, maximum age considered analysis. baseline_data Numeric vector, baseline risk data age. prev Numeric, prevalence risk allele population. geno_freq Numeric vector, represents frequency risk type complement population. trans Numeric matrix, transition matrix defines probabilities allele transmission parents offspring. BaselineNC Logical, indicates non-carrier penetrance based baseline data calculated non-carrier penetrance. ncores Integer, number cores use parallel computation.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp_noSex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Log Likelihood without Sex Differentiation — mhLogLikelihood_clipp_noSex","text":"Numeric, calculated log likelihood.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/mhLogLikelihood_clipp_noSex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Log Likelihood without Sex Differentiation — mhLogLikelihood_clipp_noSex","text":"Details clipp package methods can found package documentation.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/out_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Output Data — out_sim","title":"Simulated Output Data — out_sim","text":"dataset contains simulated output data penetrance package.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/out_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Output Data — out_sim","text":"","code":"data(out_sim)"},{"path":"https://nicokubi.github.io/penetrance/reference/out_sim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Output Data — out_sim","text":"list following components: summary_stats data frame 18000 observations 8 variables: Median_Male numeric, Median value males Median_Female numeric, Median value females Threshold_Male numeric, Threshold value males Threshold_Female numeric, Threshold value females First_Quartile_Male numeric, First quartile value males First_Quartile_Female numeric, First quartile value females Asymptote_Male numeric, Asymptote value males Asymptote_Female numeric, Asymptote value females density_plots list 1 element, mfrow: integer vector length 2 trace_plots list 1 element, mfrow: integer vector length 2 penetrance_plot list 2 elements: rect text pdf_plots list 2 elements: rect text combined_chains list 19 numeric vectors 18000 elements results list 1 element list 24 elements, 18000 elements data data frame 4727 observations 9 variables: individual integer, Individual ID isProband numeric, Indicator individual proband family integer, Family ID mother numeric, Mother's ID father numeric, Father's ID aff numeric, Affected status sex numeric, Sex individual age numeric, Age individual geno character, Genotype","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/out_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Output Data — out_sim","text":"","code":"data(out_sim) head(out_sim$summary_stats) #>   Median_Male Median_Female Threshold_Male Threshold_Female First_Quartile_Male #> 1    65.29099      52.24483        31.1586         14.67767            53.81554 #> 2    65.29099      52.24483        31.1586         14.67767            53.81554 #> 3    65.29099      52.24483        31.1586         14.67767            53.81554 #> 4    65.29099      52.24483        31.1586         14.67767            53.81554 #> 5    65.29099      52.24483        31.1586         14.67767            53.81554 #> 6    65.29099      52.24483        31.1586         14.67767            53.81554 #>   First_Quartile_Female Asymptote_Male Asymptote_Female #> 1              40.01161      0.5917241        0.6169134 #> 2              40.01161      0.5917241        0.6169134 #> 3              40.01161      0.5917241        0.6169134 #> 4              40.01161      0.5917241        0.6169134 #> 5              40.01161      0.5917241        0.6169134 #> 6              40.01161      0.5917241        0.6169134"},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":null,"dir":"Reference","previous_headings":"","what":"penetrance: A Package for Penetrance Estimation — penetrance","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"comprehensive package penetrance estimation family-based studies. package implements Bayesian methods using Metropolis-Hastings algorithm estimating age-specific penetrance genetic variants. supports sex-specific non-sex-specific analyses, provides various visualization tools examining MCMC results. function implements Independent Metropolis-Hastings algorithm Bayesian penetrance estimation cancer risk. utilizes parallel computing run multiple chains provides various options analyzing visualizing results.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"","code":"penetrance(   pedigree,   twins = NULL,   n_chains = 1,   n_iter_per_chain = 10000,   ncores = 6,   max_age = 94,   baseline_data = baseline_data_default,   remove_proband = FALSE,   age_imputation = FALSE,   median_max = TRUE,   BaselineNC = TRUE,   var = c(0.1, 0.1, 2, 2, 5, 5, 5, 5),   burn_in = 0,   thinning_factor = 1,   imp_interval = 100,   distribution_data = distribution_data_default,   prev = 1e-04,   sample_size = NULL,   ratio = NULL,   prior_params = prior_params_default,   risk_proportion = risk_proportion_default,   summary_stats = TRUE,   rejection_rates = TRUE,   density_plots = TRUE,   plot_trace = TRUE,   penetrance_plot = TRUE,   penetrance_plot_pdf = TRUE,   plot_loglikelihood = TRUE,   plot_acf = TRUE,   probCI = 0.95,   sex_specific = TRUE )"},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"pedigree list data frames, data frame represents single pedigree contains following columns: PedigreeID: numeric character identifier family/pedigree. Must consistent members family within data frame. ID: unique numeric character identifier individual within respective pedigree data frame. Sex: integer representing biological sex: 0 female, 1 male. Use NA unknown sex. MotherID: ID individual's mother. correspond ID within pedigree data frame NA mother pedigree (founder). FatherID: ID individual's father. correspond ID within pedigree data frame NA father pedigree (founder). isProband: integer indicating individual proband: 1 proband, 0 otherwise. CurAge: integer representing age censoring. current age individual alive, age death deceased. Must 1 max_age. Use NA unknown ages (note may affect analysis require imputation). isAff: integer indicating affection status cancer interest: 1 diagnosed, 0 unaffected. Use NA unknown status. Age: integer representing age cancer diagnosis. NA isAff 0 NA. Must 1 max_age, less equal CurAge. Use NA unknown diagnosis age (note may affect analysis require imputation). Geno: integer representing germline genetic test result: 1 carrier (positive), 0 non-carrier (negative). Use NA unknown untested individuals. twins list specifying identical twins triplets family. element list vector containing IDs identical siblings within pedigree. example: list(c(\"ID1\", \"ID2\"), c(\"ID3\", \"ID4\", \"ID5\")). Default NULL. n_chains Integer, number chains parallel computation. Default 1. n_iter_per_chain Integer, number iterations chain. Default 10000. ncores Integer, number cores parallel computation. Default 6. max_age Integer, maximum age considered analysis. Default 94. baseline_data Data providing absolute age-specific baseline risk (probability) developing cancer general population (e.g., SEER database). probability values must 0 1. - sex_specific = TRUE (default): data frame columns 'Male' 'Female', column contains age-specific probabilities sex. number rows ideally correspond max_age. - sex_specific = FALSE: numeric vector single-column data frame containing age-specific probabilities combined population. length (number rows) ideally correspond max_age. Default data provided Colorectal cancer SEER (age 94). number rows/length match max_age, data truncated extended last value. remove_proband Logical, indicating whether remove probands analysis. Default FALSE. age_imputation Logical, indicating whether perform age imputation. Default FALSE. median_max Logical, indicating whether use baseline median age max_age upper bound median proposal. Default TRUE. BaselineNC Logical, indicating non-carrier penetrance assumed baseline penetrance. Default TRUE. var Numeric vector, variances proposal distribution Metropolis-Hastings algorithm. Default c(0.1, 0.1, 2, 2, 5, 5, 5, 5). burn_in Numeric, fraction results discard burn-(0 1). Default 0 (burn-). thinning_factor Integer, factor thin results. Default 1 (thinning). imp_interval Integer, interval age imputation performed age_imputation = TRUE. distribution_data Data generating prior distributions. prev Numeric, prevalence carrier status. Default 0.0001. sample_size Optional numeric, sample size distribution generation. ratio Optional numeric, ratio parameter distribution generation. prior_params List, parameters prior distributions. risk_proportion Numeric, proportion risk distribution generation. summary_stats Logical, indicating whether include summary statistics output. Default TRUE. rejection_rates Logical, indicating whether include rejection rates output. Default TRUE. density_plots Logical, indicating whether include density plots output. Default TRUE. plot_trace Logical, indicating whether include trace plots output. Default TRUE. penetrance_plot Logical, indicating whether include penetrance plots output. Default TRUE. penetrance_plot_pdf Logical, indicating whether include PDF plots output. Default TRUE. plot_loglikelihood Logical, indicating whether include log-likelihood plots output. Default TRUE. plot_acf Logical, indicating whether include autocorrelation function (ACF) plots posterior samples. Default TRUE. probCI Numeric, probability level credible intervals penetrance plots. Must 0 1. Default 0.95. sex_specific Logical, indicating whether use sex-specific parameters analysis. Default TRUE.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"list containing combined results chains, including optional statistics plots.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"Key features: Bayesian estimation penetrance using family-based data Support sex-specific non-sex-specific analyses Age imputation missing data Visualization tools MCMC diagnostics Integration clipp package likelihood calculations","code":""},{"path":[]},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"Maintainer: Nicolas Kubista bmendel@jimmy.harvard.edu Authors: BayesMendel Lab","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/penetrance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"penetrance: A Package for Penetrance Estimation — penetrance","text":"","code":"# Create example baseline data (simplified for demonstration) baseline_data_default <- data.frame(   Age = 1:94,   Female = rep(0.01, 94),   Male = rep(0.01, 94) )  # Create example distribution data distribution_data_default <- data.frame(   Age = 1:94,   Risk = rep(0.01, 94) )  # Create example prior parameters prior_params_default <- list(   shape = 2,   scale = 50 )  # Create example risk proportion risk_proportion_default <- 0.5  # Create a simple example pedigree example_pedigree <- data.frame(   PedigreeID = rep(1, 4),   ID = 1:4,   Sex = c(1, 0, 1, 0),  # 1 for male, 0 for female   MotherID = c(NA, NA, 2, 2),   FatherID = c(NA, NA, 1, 1),   isProband = c(0, 0, 1, 0),   CurAge = c(70, 68, 45, 42),   isAff = c(0, 0, 1, 0),   Age = c(NA, NA, 40, NA),   Geno = c(NA, NA, 1, NA) )  # Basic usage with minimal iterations result <- penetrance(   pedigree = list(example_pedigree),   n_chains = 1,   n_iter_per_chain = 10,  # Very small number for example   ncores = 1,             # Single core for example   summary_stats = TRUE,   plot_trace = FALSE,     # Disable plots for quick example   density_plots = FALSE,   penetrance_plot = FALSE,   penetrance_plot_pdf = FALSE,   plot_loglikelihood = FALSE,   plot_acf = FALSE ) #> Rejection rates: #>   Chain 1: 0.70  # View basic results head(result$summary_stats) #>   Median_Male    Median_Female   Threshold_Male  Threshold_Female #>  Min.   :39.83   Min.   :49.99   Min.   :34.91   Min.   :25.00    #>  1st Qu.:40.00   1st Qu.:49.99   1st Qu.:34.94   1st Qu.:25.00    #>  Median :40.00   Median :50.00   Median :35.00   Median :25.00    #>  Mean   :39.98   Mean   :50.00   Mean   :34.97   Mean   :25.05    #>  3rd Qu.:40.00   3rd Qu.:50.00   3rd Qu.:35.00   3rd Qu.:25.00    #>  Max.   :40.03   Max.   :50.00   Max.   :35.00   Max.   :25.29    #>  First_Quartile_Male First_Quartile_Female Asymptote_Male   Asymptote_Female #>  Min.   :38.93       Min.   :32.50         Min.   :0.5139   Min.   :0.5571   #>  1st Qu.:39.00       1st Qu.:32.50         1st Qu.:0.5672   1st Qu.:0.7194   #>  Median :39.00       Median :32.50         Median :0.5672   Median :0.7194   #>  Mean   :39.02       Mean   :32.59         Mean   :0.5786   Mean   :0.7031   #>  3rd Qu.:39.00       3rd Qu.:32.63         3rd Qu.:0.5672   3rd Qu.:0.7194   #>  Max.   :39.14       Max.   :32.83         Max.   :0.6793   Max.   :0.7534"},{"path":"https://nicokubi.github.io/penetrance/reference/plot_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Autocorrelation for Multiple MCMC Chains (Posterior Samples) — plot_acf","title":"Plot Autocorrelation for Multiple MCMC Chains (Posterior Samples) — plot_acf","text":"function plots autocorrelation sex-specific non-sex-specific posterior samples across multiple MCMC chains. defaults key parameters like asymptote_male_samples, asymptote_female_samples, etc.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Autocorrelation for Multiple MCMC Chains (Posterior Samples) — plot_acf","text":"","code":"plot_acf(results, n_chains, max_lag = 50)"},{"path":"https://nicokubi.github.io/penetrance/reference/plot_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Autocorrelation for Multiple MCMC Chains (Posterior Samples) — plot_acf","text":"results list MCMC chain results. n_chains number chains. max_lag Integer, maximum lag considered autocorrelation plot. Default 50.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Autocorrelation for Multiple MCMC Chains (Posterior Samples) — plot_acf","text":"series autocorrelation plots chain.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_loglikelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Log-Likelihood for Multiple MCMC Chains — plot_loglikelihood","title":"Plot Log-Likelihood for Multiple MCMC Chains — plot_loglikelihood","text":"function plots log-likelihood values across iterations multiple MCMC chains. helps visualize convergence chains based log-likelihood values.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_loglikelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Log-Likelihood for Multiple MCMC Chains — plot_loglikelihood","text":"","code":"plot_loglikelihood(results, n_chains)"},{"path":"https://nicokubi.github.io/penetrance/reference/plot_loglikelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Log-Likelihood for Multiple MCMC Chains — plot_loglikelihood","text":"results list MCMC chain results, containing loglikelihood_current values. n_chains number chains.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_loglikelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Log-Likelihood for Multiple MCMC Chains — plot_loglikelihood","text":"series log-likelihood plots chain.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Weibull Probability Density Function with Credible Intervals — plot_pdf","title":"Plot Weibull Probability Density Function with Credible Intervals — plot_pdf","text":"function plots Weibull PDF credible intervals given MCMC results. allows visualization density curves based posterior samples.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Weibull Probability Density Function with Credible Intervals — plot_pdf","text":"","code":"plot_pdf(combined_chains, prob, max_age, sex = \"NA\")"},{"path":"https://nicokubi.github.io/penetrance/reference/plot_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Weibull Probability Density Function with Credible Intervals — plot_pdf","text":"combined_chains List combined MCMC chain results containing posterior samples penetrance parameters. prob Numeric, probability level confidence intervals (0 1). max_age Integer, maximum age plot. sex Character, one \"Male\", \"Female\", \"NA\" non-sex-specific. Default \"NA\".","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Weibull Probability Density Function with Credible Intervals — plot_pdf","text":"plot showing Weibull PDF credible intervals.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_penetrance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Weibull Distribution with Credible Intervals — plot_penetrance","title":"Plot Weibull Distribution with Credible Intervals — plot_penetrance","text":"function plots Weibull distribution credible intervals given MCMC results. allows visualization penetrance curves based posterior samples.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_penetrance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Weibull Distribution with Credible Intervals — plot_penetrance","text":"","code":"plot_penetrance(combined_chains, prob, max_age, sex = \"NA\")"},{"path":"https://nicokubi.github.io/penetrance/reference/plot_penetrance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Weibull Distribution with Credible Intervals — plot_penetrance","text":"combined_chains List combined MCMC chain results containing posterior samples penetrance parameters. prob Numeric, probability level confidence intervals (0 1). max_age Integer, maximum age plot. sex Character, one \"Male\", \"Female\", \"NA\" non-sex-specific. Default \"NA\".","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_penetrance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Weibull Distribution with Credible Intervals — plot_penetrance","text":"plot showing Weibull distribution credible intervals.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC Trace Plots — plot_trace","title":"Plot MCMC Trace Plots — plot_trace","text":"Plot MCMC Trace Plots","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC Trace Plots — plot_trace","text":"","code":"plot_trace(results, n_chains, verbose = FALSE)"},{"path":"https://nicokubi.github.io/penetrance/reference/plot_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC Trace Plots — plot_trace","text":"results list MCMC chain results. n_chains Integer, number chains. verbose Logical, whether print progress messages. Default FALSE.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC Trace Plots — plot_trace","text":"return value, called side effects. Creates trace plots parameter.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/plot_trace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MCMC Trace Plots — plot_trace","text":"","code":"# Create example results list results <- list(   list(     median_samples = rnorm(100),     threshold_samples = runif(100),     first_quartile_samples = rgamma(100, 2, 2),     asymptote_samples = rbeta(100, 2, 2)   ) )  # Generate trace plots plot_trace(results, n_chains = 1)"},{"path":"https://nicokubi.github.io/penetrance/reference/printRejectionRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Print MCMC Rejection Rates — printRejectionRates","title":"Print MCMC Rejection Rates — printRejectionRates","text":"Print MCMC Rejection Rates","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/printRejectionRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print MCMC Rejection Rates — printRejectionRates","text":"","code":"printRejectionRates(results, verbose = TRUE)"},{"path":"https://nicokubi.github.io/penetrance/reference/printRejectionRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print MCMC Rejection Rates — printRejectionRates","text":"results list MCMC chain results. verbose Logical, whether print rates console. Default TRUE.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/printRejectionRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print MCMC Rejection Rates — printRejectionRates","text":"named numeric vector containing rejection rate (0 1) MCMC chain. Names form \"Chain X\" X chain number.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/printRejectionRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print MCMC Rejection Rates — printRejectionRates","text":"Extracts prints rejection rates MCMC chain results.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/printRejectionRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print MCMC Rejection Rates — printRejectionRates","text":"","code":"# Create example results list with two chains results <- list(   list(rejection_rate = 0.3),   list(rejection_rate = 0.4) )  # Get rejection rates without printing rates <- printRejectionRates(results, verbose = FALSE)  # Print rejection rates rates <- printRejectionRates(results) #> Rejection rates: #>   Chain 1: 0.30 #>   Chain 2: 0.40"},{"path":"https://nicokubi.github.io/penetrance/reference/prior_params_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Prior Parameters — prior_params_default","title":"Default Prior Parameters — prior_params_default","text":"Default parameters prior distributions used makePriors function.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/prior_params_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Prior Parameters — prior_params_default","text":"","code":"prior_params_default  prior_params_default"},{"path":"https://nicokubi.github.io/penetrance/reference/prior_params_default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default Prior Parameters — prior_params_default","text":"list prior distribution parameters list following components: asymptote list components g1 g2, default values asymptote parameters. threshold list components min max, default values threshold parameters. median list components m1 m2, default values median parameters. first_quartile list components q1 q2, default values first quartile parameters.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/risk_proportion_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Risk Proportions — risk_proportion_default","title":"Default Risk Proportions — risk_proportion_default","text":"Default proportions people risk used makePriors function.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/risk_proportion_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Risk Proportions — risk_proportion_default","text":"","code":"risk_proportion_default  risk_proportion_default"},{"path":"https://nicokubi.github.io/penetrance/reference/risk_proportion_default.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default Risk Proportions — risk_proportion_default","text":"data frame risk proportions data frame following columns: median Proportion people risk median age. first_quartile Proportion people risk first quartile age. max_age Proportion people risk maximum age.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/simulated_families.html","id":null,"dir":"Reference","previous_headings":"","what":"Processed Family Data — simulated_families","title":"Processed Family Data — simulated_families","text":"dataset containing processed information first simulated 130 families. families referenced vigniette simulation_study.Rmd using_penetrance.Rmd user must specify pedigree argument data frame contains family data (see test_fam). family data must correct format following columns:","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/simulated_families.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processed Family Data — simulated_families","text":"","code":"simulated_families"},{"path":"https://nicokubi.github.io/penetrance/reference/simulated_families.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Processed Family Data — simulated_families","text":"list processed family data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/simulated_families.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Processed Family Data — simulated_families","text":"Generated package example","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/simulated_families.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Processed Family Data — simulated_families","text":"ID numeric value representing unique identifier individual. duplicated entries. Sex numeric value 0 indicates female 1 indicates male. Missing entries currently supported. MotherID numeric value representing unique identifier individual's mother. FatherID numeric value representing unique identifier individual's father. isProband numeric value 1 indicates individual proband 0 otherwise. CurAge numeric value indicating age censoring (current age person alive age death person deceased). Allowed ages range 1 94. isAff numeric value indicating affection status cancer, 1 diagnosed individuals 0 otherwise. Missing entries supported. Age numeric value indicating age cancer diagnosis, encoded NA individual diagnosed. Allowed ages range 1 94. Geno column germline testing tumor marker testing results. Positive results coded 1, negative results 0, unknown results NA left empty.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/test_fam2.html","id":null,"dir":"Reference","previous_headings":"","what":"Processed Family Data — test_fam2","title":"Processed Family Data — test_fam2","text":"dataset containing processed information first simulated 130 families. families referenced vigniette simulation_study_real.Rmd user must specify pedigree argument data frame contains family data (see test_fam). family data must correct format following columns:","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/test_fam2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processed Family Data — test_fam2","text":"","code":"test_fam2"},{"path":"https://nicokubi.github.io/penetrance/reference/test_fam2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Processed Family Data — test_fam2","text":"list processed family data.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/test_fam2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Processed Family Data — test_fam2","text":"Generated package example","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/test_fam2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Processed Family Data — test_fam2","text":"ID numeric value representing unique identifier individual. duplicated entries. Sex numeric value 0 indicates female 1 indicates male. Missing entries currently supported. MotherID numeric value representing unique identifier individual's mother. FatherID numeric value representing unique identifier individual's father. isProband numeric value 1 indicates individual proband 0 otherwise. CurAge numeric value indicating age censoring (current age person alive age death person deceased). Allowed ages range 1 94. isAff numeric value indicating affection status cancer, 1 diagnosed individuals 0 otherwise. Missing entries supported. Age numeric value indicating age cancer diagnosis, encoded NA individual diagnosed. Allowed ages range 1 94. Geno column germline testing tumor marker testing results. Positive results coded 1, negative results 0, unknown results NA left empty.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/transformDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Data Frame — transformDF","title":"Transform Data Frame — transformDF","text":"function transforms data frame standard format used PanelPRO required format conforms requirements penetrance (clipp).","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/transformDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Data Frame — transformDF","text":"","code":"transformDF(df)"},{"path":"https://nicokubi.github.io/penetrance/reference/transformDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Data Frame — transformDF","text":"df input data frame usual PanelPRO format.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/transformDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Data Frame — transformDF","text":"data frame format required clipp following columns: individual ID individual isProband Indicator individual proband family Family ID mother Mother's ID father Father's ID aff Affection status sex Sex (2 female, 1 male) age Age diagnosis current age geno Genotype information","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/transformDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Data Frame — transformDF","text":"","code":"# Create example data frame df <- data.frame(   ID = 1:2,   PedigreeID = c(1,1),   Sex = c(0,1),   MotherID = c(NA,1),   FatherID = c(NA,NA),   isProband = c(1,0),   CurAge = c(45,20),   isAff = c(1,0),   Age = c(40,NA),   Geno = c(1,0) )  # Transform the data frame transformed_df <- transformDF(df)"},{"path":"https://nicokubi.github.io/penetrance/reference/validate_weibull_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Weibull Parameters — validate_weibull_parameters","title":"Validate Weibull Parameters — validate_weibull_parameters","text":"function validates given parameters calculating Weibull distribution.","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/validate_weibull_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Weibull Parameters — validate_weibull_parameters","text":"","code":"validate_weibull_parameters(   given_first_quartile,   given_median,   threshold,   asymptote )"},{"path":"https://nicokubi.github.io/penetrance/reference/validate_weibull_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Weibull Parameters — validate_weibull_parameters","text":"given_first_quartile first quartile data. given_median median data. threshold constant threshold value. asymptote constant asymptote value (gamma).","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/validate_weibull_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Weibull Parameters — validate_weibull_parameters","text":"Logical value indicating whether parameters valid (TRUE) (FALSE)","code":""},{"path":"https://nicokubi.github.io/penetrance/reference/validate_weibull_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Weibull Parameters — validate_weibull_parameters","text":"","code":"# Validate parameters is_valid <- validate_weibull_parameters(   given_first_quartile = 30,   given_median = 50,   threshold = 15,   asymptote = 0.8 ) print(is_valid) #> [1] TRUE"}]
