mutate(Percent = round(Count / total_individuals_overall * 100, 1))
# Print the race breakdown table in LaTeX format
kable(race_breakdown,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Race", "Count", "Percent"),
caption = "Race Breakdown in the Overall Dataset") %>%
kable_styling(latex_options = c("hold_position"))
# Load necessary packages
library(dplyr)
library(knitr)
library(kableExtra)
# === Load Data ===
load("/Users/nicolaskubista/Partners HealthCare Dropbox/BayesMendel/Projects/Active/NK_PenetranceEstimation/3_Code/CCGCRN Data Application/PALB2/PALB2_carrier_families.RData")
dat <- bind_rows(carrier_families_list, .id="id")
### Compute Overall Statistics ###
# 1. Pedigree and Family Size Information
num_probands_overall <- dat %>%
filter(isProband == 1) %>%
distinct(PedigreeID) %>%
nrow()
family_sizes_overall <- dat %>%
group_by(PedigreeID) %>%
summarise(n = n())
mean_family_size_overall <- round(mean(family_sizes_overall$n), 0)
min_family_size_overall <- min(family_sizes_overall$n)
max_family_size_overall <- max(family_sizes_overall$n)
# 2. Total Individuals and Breakdown by Proband/Relative and Sex
total_individuals_overall <- nrow(dat)
# For individuals (note: here we count every record, not distinct pedigrees)
total_probands_individuals <- sum(dat$isProband == 1, na.rm = TRUE)
total_relatives_individuals <- sum(dat$isProband == 0, na.rm = TRUE)
# Sex breakdown among probands
probands_female_total <- sum(dat$isProband == 1 & dat$Sex == 0, na.rm = TRUE)
probands_male_total   <- sum(dat$isProband == 1 & dat$Sex == 1, na.rm = TRUE)
# Sex breakdown among relatives
relatives_female_total <- sum(dat$isProband == 0 & dat$Sex == 0, na.rm = TRUE)
relatives_male_total   <- sum(dat$isProband == 0 & dat$Sex == 1, na.rm = TRUE)
# 3. Overall Sex Counts (all individuals)
num_females_overall <- sum(dat$Sex == 0, na.rm = TRUE)
num_males_overall   <- sum(dat$Sex == 1, na.rm = TRUE)
# 4. Genotyping for PALB2 (assume genotyped if PALB2 is 0 or 1)
total_genotyped_overall <- dat %>% filter(PALB2 %in% c(0,1)) %>% nrow()
# For probands (genotype)
probands_genotyped_overall <- dat %>%
filter(isProband == 1, PALB2 %in% c(0,1)) %>%
nrow()
probands_carriers_overall <- dat %>%
filter(isProband == 1, PALB2 == 1)
num_probands_carriers_overall       <- nrow(probands_carriers_overall)
num_probands_carriers_female_overall <- sum(probands_carriers_overall$Sex == 0, na.rm = TRUE)
num_probands_carriers_male_overall   <- sum(probands_carriers_overall$Sex == 1, na.rm = TRUE)
# For relatives (genotype)
relatives_genotyped_overall <- dat %>%
filter(isProband == 0, PALB2 %in% c(0,1)) %>%
nrow()
relatives_carriers_overall <- dat %>%
filter(isProband == 0, PALB2 == 1)
num_relatives_carriers_female_overall <- sum(relatives_carriers_overall$Sex == 0, na.rm = TRUE)
num_relatives_carriers_male_overall   <- sum(relatives_carriers_overall$Sex == 1, na.rm = TRUE)
# Total PALB2 PGV carriers (overall)
total_carriers_overall <- dat %>%
filter(PALB2 == 1, PALB2 %in% c(0,1)) %>%
nrow()
# 5. Ovarian Cancer Cases
ovarian_cases_total_overall    <- dat %>% filter(isAffOC == 1) %>% nrow()
ovarian_cases_probands_overall <- dat %>% filter(isAffOC == 1, isProband == 1, Sex == 0) %>% nrow()
ovarian_cases_relatives_overall<- dat %>% filter(isAffOC == 1, isProband == 0, Sex == 0) %>% nrow()
# Denominators for OC percentages (only females can have OC)
num_probands_female_overall <- dat %>% filter(isProband == 1, Sex == 0) %>% nrow()
num_relatives_female_overall <- dat %>% filter(isProband == 0, Sex == 0) %>% nrow()
# 6. Age at Diagnosis for Ovarian Cancer (for affected individuals only)
oc_ages_overall <- dat %>% filter(isAffOC == 1) %>% pull(AgeOC)
oc_age_median_overall <- median(oc_ages_overall, na.rm = TRUE)
oc_age_min_overall    <- min(oc_ages_overall, na.rm = TRUE)
oc_age_max_overall    <- max(oc_ages_overall, na.rm = TRUE)
### Create the Main Table Data Frame (Overall Only) ###
table_data <- data.frame(
Characteristic = c(
"Number of Probands/Pedigrees",
"Family Size, Mean (Range)",
"Total Number of Individuals",
" Probands",
"  Females",
"  Males",
" Relatives",
"  Females",
"  Males",
"Total Genotyped for \\textit{PALB2}",
" Probands",
"  Females",
"  Males",
" Relatives",
"  Females",
"  Males",
"\\textit{PALB2} PGV Carriers",
"Ovarian Cancer Cases Total",
" Probands (female)$^a$",
" Relatives (female)$^b$",
"Age at Diagnosis, Median (Range)"
),
Overall = c(
num_probands_overall,
paste0(mean_family_size_overall, " (", min_family_size_overall, "--", max_family_size_overall, ")"),
paste0(total_individuals_overall, " (100.0)"),
# Breakdown for total individuals:
paste0(total_probands_individuals, " (", round(total_probands_individuals / total_individuals_overall * 100, 1), ")"),
paste0(probands_female_total, " (", round(probands_female_total / total_probands_individuals * 100, 1), ")"),
paste0(probands_male_total, " (", round(probands_male_total / total_probands_individuals * 100, 1), ")"),
paste0(total_relatives_individuals, " (", round(total_relatives_individuals / total_individuals_overall * 100, 1), ")"),
paste0(relatives_female_total, " (", round(relatives_female_total / total_relatives_individuals * 100, 1), ")"),
paste0(relatives_male_total, " (", round(relatives_male_total / total_relatives_individuals * 100, 1), ")"),
# Genotyping breakdown
paste0(total_genotyped_overall, " (", round(total_genotyped_overall / total_individuals_overall * 100, 1), ")"),
paste0(probands_genotyped_overall, " (", round(probands_genotyped_overall / total_genotyped_overall * 100, 1), ")"),
paste0(num_probands_carriers_female_overall, " (", round(num_probands_carriers_female_overall / probands_genotyped_overall * 100, 1), ")"),
paste0(num_probands_carriers_male_overall, " (", round(num_probands_carriers_male_overall / probands_genotyped_overall * 100, 1), ")"),
paste0(relatives_genotyped_overall, " (", round(relatives_genotyped_overall / total_genotyped_overall * 100, 1), ")"),
paste0(num_relatives_carriers_female_overall, " (", round(num_relatives_carriers_female_overall / relatives_genotyped_overall * 100, 1), ")"),
paste0(num_relatives_carriers_male_overall, " (", round(num_relatives_carriers_male_overall / relatives_genotyped_overall * 100, 1), ")"),
paste0(total_carriers_overall, " (", round(total_carriers_overall / total_genotyped_overall * 100, 1), ")"),
ovarian_cases_total_overall,
paste0(ovarian_cases_probands_overall, " (", round(ovarian_cases_probands_overall / num_probands_female_overall * 100, 1), ")"),
paste0(ovarian_cases_relatives_overall, " (", round(ovarian_cases_relatives_overall / num_relatives_female_overall * 100, 1), ")"),
paste0(oc_age_median_overall, " (", oc_age_min_overall, "--", oc_age_max_overall, ")")
),
stringsAsFactors = FALSE
)
### Add a Missingness Section for Age at Diagnosis (Affected Individuals Only) ###
# Filter the data to only those affected with ovarian cancer
affected <- dat %>% filter(isAffOC == 1)
# Compute the number of affected individuals with missing AgeOC
missing_age_oc_overall   <- sum(is.na(affected$AgeOC))
missing_age_oc_probands  <- sum(is.na(affected$AgeOC[affected$isProband == 1]))
missing_age_oc_relatives <- sum(is.na(affected$AgeOC[affected$isProband == 0]))
# Create a data frame with the missingness information
missingness_data <- data.frame(
Characteristic = c("Missing Age at Diagnosis Data (Affected Only)", " Overall", " Probands", " Relatives"),
Overall = c("", missing_age_oc_overall, missing_age_oc_probands, missing_age_oc_relatives),
stringsAsFactors = FALSE
)
# Append the missingness rows to the main table
table_data <- rbind(table_data, missingness_data)
# Print the main table in LaTeX format (Overall Only)
kable(table_data,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Characteristic", "Overall Count (\\%)"),
caption = "Demographic and Clinical Characteristics of the CCGCRN Dataset (Overall)") %>%
kable_styling(latex_options = c("hold_position"))
### Create a Race Breakdown Table ###
# (Assuming 'Race' is a column in 'dat')
race_breakdown <- dat %>%
group_by(Race) %>%
summarise(Count = n()) %>%
mutate(Percent = round(Count / total_individuals_overall * 100, 1))
# Print the race breakdown table in LaTeX format
kable(race_breakdown,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Race", "Count", "Percent"),
caption = "Race Breakdown in the Overall Dataset") %>%
kable_styling(latex_options = c("hold_position"))
colnames(dat)
### Create a Race Breakdown Table ###
# (Assuming 'Race' is a column in 'dat')
race_breakdown <- dat %>%
group_by(race) %>%
summarise(Count = n()) %>%
mutate(Percent = round(Count / total_individuals_overall * 100, 1))
# Print the race breakdown table in LaTeX format
kable(race_breakdown,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Race", "Count", "Percent"),
caption = "Race Breakdown in the Overall Dataset") %>%
kable_styling(latex_options = c("hold_position"))
# Load necessary packages
library(dplyr)
library(knitr)
library(kableExtra)
# === Load Data ===
load("/Users/nicolaskubista/Partners HealthCare Dropbox/BayesMendel/Projects/Active/NK_PenetranceEstimation/3_Code/CCGCRN Data Application/PALB2/PALB2_carrier_families.RData")
dat <- bind_rows(carrier_families_list, .id="id")
### Compute Overall Statistics ###
# 1. Pedigree and Family Size Information
num_probands_overall <- dat %>%
filter(isProband == 1) %>%
distinct(PedigreeID) %>%
nrow()
family_sizes_overall <- dat %>%
group_by(PedigreeID) %>%
summarise(n = n())
mean_family_size_overall <- round(mean(family_sizes_overall$n), 0)
min_family_size_overall <- min(family_sizes_overall$n)
max_family_size_overall <- max(family_sizes_overall$n)
# 2. Total Individuals and Breakdown by Proband/Relative and Sex
total_individuals_overall <- nrow(dat)
# For individuals (note: here we count every record, not distinct pedigrees)
total_probands_individuals <- sum(dat$isProband == 1, na.rm = TRUE)
total_relatives_individuals <- sum(dat$isProband == 0, na.rm = TRUE)
# Sex breakdown among probands
probands_female_total <- sum(dat$isProband == 1 & dat$Sex == 0, na.rm = TRUE)
probands_male_total   <- sum(dat$isProband == 1 & dat$Sex == 1, na.rm = TRUE)
# Sex breakdown among relatives
relatives_female_total <- sum(dat$isProband == 0 & dat$Sex == 0, na.rm = TRUE)
relatives_male_total   <- sum(dat$isProband == 0 & dat$Sex == 1, na.rm = TRUE)
# 3. Overall Sex Counts (all individuals)
num_females_overall <- sum(dat$Sex == 0, na.rm = TRUE)
num_males_overall   <- sum(dat$Sex == 1, na.rm = TRUE)
# 4. Genotyping for PALB2 (assume genotyped if PALB2 is 0 or 1)
total_genotyped_overall <- dat %>% filter(PALB2 %in% c(0,1)) %>% nrow()
# For probands (genotype)
probands_genotyped_overall <- dat %>%
filter(isProband == 1, PALB2 %in% c(0,1)) %>%
nrow()
probands_carriers_overall <- dat %>%
filter(isProband == 1, PALB2 == 1)
num_probands_carriers_overall       <- nrow(probands_carriers_overall)
num_probands_carriers_female_overall <- sum(probands_carriers_overall$Sex == 0, na.rm = TRUE)
num_probands_carriers_male_overall   <- sum(probands_carriers_overall$Sex == 1, na.rm = TRUE)
# For relatives (genotype)
relatives_genotyped_overall <- dat %>%
filter(isProband == 0, PALB2 %in% c(0,1)) %>%
nrow()
relatives_carriers_overall <- dat %>%
filter(isProband == 0, PALB2 == 1)
num_relatives_carriers_female_overall <- sum(relatives_carriers_overall$Sex == 0, na.rm = TRUE)
num_relatives_carriers_male_overall   <- sum(relatives_carriers_overall$Sex == 1, na.rm = TRUE)
# Total PALB2 PGV carriers (overall)
total_carriers_overall <- dat %>%
filter(PALB2 == 1, PALB2 %in% c(0,1)) %>%
nrow()
# 5. Ovarian Cancer Cases
ovarian_cases_total_overall    <- dat %>% filter(isAffOC == 1) %>% nrow()
ovarian_cases_probands_overall <- dat %>% filter(isAffOC == 1, isProband == 1, Sex == 0) %>% nrow()
ovarian_cases_relatives_overall<- dat %>% filter(isAffOC == 1, isProband == 0, Sex == 0) %>% nrow()
# Denominators for OC percentages (only females can have OC)
num_probands_female_overall <- dat %>% filter(isProband == 1, Sex == 0) %>% nrow()
num_relatives_female_overall <- dat %>% filter(isProband == 0, Sex == 0) %>% nrow()
# 6. Age at Diagnosis for Ovarian Cancer (Affected Individuals Only)
oc_ages_overall <- dat %>% filter(isAffOC == 1) %>% pull(AgeOC)
oc_age_median_overall <- median(oc_ages_overall, na.rm = TRUE)
oc_age_min_overall    <- min(oc_ages_overall, na.rm = TRUE)
oc_age_max_overall    <- max(oc_ages_overall, na.rm = TRUE)
### Create the Main Table Data Frame (Overall Only) ###
table_data <- data.frame(
Characteristic = c(
"Number of Probands/Pedigrees",
"Family Size, Mean (Range)",
"Total Number of Individuals",
" Probands",
"  Females",
"  Males",
" Relatives",
"  Females",
"  Males",
"Total Genotyped for \\textit{PALB2}",
" Probands",
"  Females",
"  Males",
" Relatives",
"  Females",
"  Males",
"\\textit{PALB2} PGV Carriers",
"Ovarian Cancer Cases Total",
" Probands (female)$^a$",
" Relatives (female)$^b$",
"Age at Diagnosis, Median (Range)"
),
Overall = c(
num_probands_overall,
paste0(mean_family_size_overall, " (", min_family_size_overall, "--", max_family_size_overall, ")"),
paste0(total_individuals_overall, " (100.0)"),
# Breakdown for total individuals:
paste0(total_probands_individuals, " (", round(total_probands_individuals / total_individuals_overall * 100, 1), ")"),
paste0(probands_female_total, " (", round(probands_female_total / total_probands_individuals * 100, 1), ")"),
paste0(probands_male_total, " (", round(probands_male_total / total_probands_individuals * 100, 1), ")"),
paste0(total_relatives_individuals, " (", round(total_relatives_individuals / total_individuals_overall * 100, 1), ")"),
paste0(relatives_female_total, " (", round(relatives_female_total / total_relatives_individuals * 100, 1), ")"),
paste0(relatives_male_total, " (", round(relatives_male_total / total_relatives_individuals * 100, 1), ")"),
# Genotyping breakdown
paste0(total_genotyped_overall, " (", round(total_genotyped_overall / total_individuals_overall * 100, 1), ")"),
paste0(probands_genotyped_overall, " (", round(probands_genotyped_overall / total_genotyped_overall * 100, 1), ")"),
paste0(num_probands_carriers_female_overall, " (", round(num_probands_carriers_female_overall / probands_genotyped_overall * 100, 1), ")"),
paste0(num_probands_carriers_male_overall, " (", round(num_probands_carriers_male_overall / probands_genotyped_overall * 100, 1), ")"),
paste0(relatives_genotyped_overall, " (", round(relatives_genotyped_overall / total_genotyped_overall * 100, 1), ")"),
paste0(num_relatives_carriers_female_overall, " (", round(num_relatives_carriers_female_overall / relatives_genotyped_overall * 100, 1), ")"),
paste0(num_relatives_carriers_male_overall, " (", round(num_relatives_carriers_male_overall / relatives_genotyped_overall * 100, 1), ")"),
paste0(total_carriers_overall, " (", round(total_carriers_overall / total_genotyped_overall * 100, 1), ")"),
ovarian_cases_total_overall,
paste0(ovarian_cases_probands_overall, " (", round(ovarian_cases_probands_overall / num_probands_female_overall * 100, 1), ")"),
paste0(ovarian_cases_relatives_overall, " (", round(ovarian_cases_relatives_overall / num_relatives_female_overall * 100, 1), ")"),
paste0(oc_age_median_overall, " (", oc_age_min_overall, "--", oc_age_max_overall, ")")
),
stringsAsFactors = FALSE
)
### Add a Missingness Section for Age at Diagnosis (Affected Individuals Only) ###
# Filter the data to only those affected with ovarian cancer
affected <- dat %>% filter(isAffOC == 1)
# Compute the number of affected individuals with missing AgeOC
missing_age_oc_overall   <- sum(is.na(affected$AgeOC))
missing_age_oc_probands  <- sum(is.na(affected$AgeOC[affected$isProband == 1]))
missing_age_oc_relatives <- sum(is.na(affected$AgeOC[affected$isProband == 0]))
# Create a data frame with the missingness information
missingness_data <- data.frame(
Characteristic = c("Missing Age at Diagnosis Data (Affected Only)", " Overall", " Probands", " Relatives"),
Overall = c("", missing_age_oc_overall, missing_age_oc_probands, missing_age_oc_relatives),
stringsAsFactors = FALSE
)
# Append the missingness rows to the main table
table_data <- rbind(table_data, missingness_data)
# Print the main table in LaTeX format (Overall Only)
kable(table_data,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Characteristic", "Overall Count (\\%)"),
caption = "Demographic and Clinical Characteristics of the CCGCRN Dataset (Overall)") %>%
kable_styling(latex_options = c("hold_position"))
### Create a Race Breakdown Table for Probands Only ###
race_breakdown <- dat %>%
filter(isProband == 1) %>%
group_by(Race) %>%
summarise(Count = n()) %>%
mutate(Percent = round(Count / total_probands_individuals * 100, 1))
# Print the race breakdown table in LaTeX format
kable(race_breakdown,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Race", "Count", "Percent"),
caption = "Race Breakdown for Probands in the Dataset") %>%
kable_styling(latex_options = c("hold_position"))
### Create a Race Breakdown Table for Probands Only ###
race_breakdown <- dat %>%
filter(isProband == 1) %>%
group_by(race) %>%
summarise(Count = n()) %>%
mutate(Percent = round(Count / total_probands_individuals * 100, 1))
# Print the race breakdown table in LaTeX format
kable(race_breakdown,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Race", "Count", "Percent"),
caption = "Race Breakdown for Probands in the Dataset") %>%
kable_styling(latex_options = c("hold_position"))
# Load necessary packages
library(dplyr)
library(knitr)
library(kableExtra)
# === Load Data ===
load("/Users/nicolaskubista/Partners HealthCare Dropbox/BayesMendel/Projects/Active/NK_PenetranceEstimation/3_Code/CCGCRN Data Application/PALB2/PALB2_carrier_families.RData")
dat <- bind_rows(carrier_families_list, .id="id")
### Compute Overall Statistics ###
# 1. Pedigree and Family Size Information
num_probands_overall <- dat %>%
filter(isProband == 1) %>%
distinct(PedigreeID) %>%
nrow()
family_sizes_overall <- dat %>%
group_by(PedigreeID) %>%
summarise(n = n())
mean_family_size_overall <- round(mean(family_sizes_overall$n), 0)
min_family_size_overall <- min(family_sizes_overall$n)
max_family_size_overall <- max(family_sizes_overall$n)
# 2. Total Individuals and Breakdown by Proband/Relative and Sex
total_individuals_overall <- nrow(dat)
# For individuals (note: here we count every record, not distinct pedigrees)
total_probands_individuals <- sum(dat$isProband == 1, na.rm = TRUE)
total_relatives_individuals <- sum(dat$isProband == 0, na.rm = TRUE)
# Sex breakdown among probands
probands_female_total <- sum(dat$isProband == 1 & dat$Sex == 0, na.rm = TRUE)
probands_male_total   <- sum(dat$isProband == 1 & dat$Sex == 1, na.rm = TRUE)
# Sex breakdown among relatives
relatives_female_total <- sum(dat$isProband == 0 & dat$Sex == 0, na.rm = TRUE)
relatives_male_total   <- sum(dat$isProband == 0 & dat$Sex == 1, na.rm = TRUE)
# 3. Overall Sex Counts (all individuals)
num_females_overall <- sum(dat$Sex == 0, na.rm = TRUE)
num_males_overall   <- sum(dat$Sex == 1, na.rm = TRUE)
# 4. Genotyping for PALB2 (assume genotyped if PALB2 is 0 or 1)
total_genotyped_overall <- dat %>% filter(PALB2 %in% c(0,1)) %>% nrow()
# For probands (genotype)
probands_genotyped_overall <- dat %>%
filter(isProband == 1, PALB2 %in% c(0,1)) %>%
nrow()
probands_carriers_overall <- dat %>%
filter(isProband == 1, PALB2 == 1)
num_probands_carriers_overall       <- nrow(probands_carriers_overall)
num_probands_carriers_female_overall <- sum(probands_carriers_overall$Sex == 0, na.rm = TRUE)
num_probands_carriers_male_overall   <- sum(probands_carriers_overall$Sex == 1, na.rm = TRUE)
# For relatives (genotype)
relatives_genotyped_overall <- dat %>%
filter(isProband == 0, PALB2 %in% c(0,1)) %>%
nrow()
relatives_carriers_overall <- dat %>%
filter(isProband == 0, PALB2 == 1)
num_relatives_carriers_female_overall <- sum(relatives_carriers_overall$Sex == 0, na.rm = TRUE)
num_relatives_carriers_male_overall   <- sum(relatives_carriers_overall$Sex == 1, na.rm = TRUE)
# Total PALB2 PGV carriers (overall)
total_carriers_overall <- dat %>%
filter(PALB2 == 1, PALB2 %in% c(0,1)) %>%
nrow()
# 5. Ovarian Cancer Cases
ovarian_cases_total_overall    <- dat %>% filter(isAffOC == 1) %>% nrow()
ovarian_cases_probands_overall <- dat %>% filter(isAffOC == 1, isProband == 1, Sex == 0) %>% nrow()
ovarian_cases_relatives_overall<- dat %>% filter(isAffOC == 1, isProband == 0, Sex == 0) %>% nrow()
# Denominators for OC percentages (only females can have OC)
num_probands_female_overall <- dat %>% filter(isProband == 1, Sex == 0) %>% nrow()
num_relatives_female_overall <- dat %>% filter(isProband == 0, Sex == 0) %>% nrow()
# 6. Age at Diagnosis for Ovarian Cancer (Affected Individuals Only)
oc_ages_overall <- dat %>% filter(isAffOC == 1) %>% pull(AgeOC)
oc_age_median_overall <- median(oc_ages_overall, na.rm = TRUE)
oc_age_min_overall    <- min(oc_ages_overall, na.rm = TRUE)
oc_age_max_overall    <- max(oc_ages_overall, na.rm = TRUE)
### Create the Main Table Data Frame (Overall Only) ###
table_data <- data.frame(
Characteristic = c(
"Number of Probands/Pedigrees",
"Family Size, Mean (Range)",
"Total Number of Individuals",
" Probands",
"  Females",
"  Males",
" Relatives",
"  Females",
"  Males",
"Total Genotyped for \\textit{PALB2}",
" Probands",
"  Females",
"  Males",
" Relatives",
"  Females",
"  Males",
"\\textit{PALB2} PGV Carriers",
"Ovarian Cancer Cases Total",
" Probands (female)$^a$",
" Relatives (female)$^b$",
"Age at Diagnosis, Median (Range)"
),
Overall = c(
num_probands_overall,
paste0(mean_family_size_overall, " (", min_family_size_overall, "--", max_family_size_overall, ")"),
paste0(total_individuals_overall, " (100.0)"),
# Breakdown for total individuals:
paste0(total_probands_individuals, " (", round(total_probands_individuals / total_individuals_overall * 100, 1), ")"),
paste0(probands_female_total, " (", round(probands_female_total / total_probands_individuals * 100, 1), ")"),
paste0(probands_male_total, " (", round(probands_male_total / total_probands_individuals * 100, 1), ")"),
paste0(total_relatives_individuals, " (", round(total_relatives_individuals / total_individuals_overall * 100, 1), ")"),
paste0(relatives_female_total, " (", round(relatives_female_total / total_relatives_individuals * 100, 1), ")"),
paste0(relatives_male_total, " (", round(relatives_male_total / total_relatives_individuals * 100, 1), ")"),
# Genotyping breakdown
paste0(total_genotyped_overall, " (", round(total_genotyped_overall / total_individuals_overall * 100, 1), ")"),
paste0(probands_genotyped_overall, " (", round(probands_genotyped_overall / total_genotyped_overall * 100, 1), ")"),
paste0(num_probands_carriers_female_overall, " (", round(num_probands_carriers_female_overall / probands_genotyped_overall * 100, 1), ")"),
paste0(num_probands_carriers_male_overall, " (", round(num_probands_carriers_male_overall / probands_genotyped_overall * 100, 1), ")"),
paste0(relatives_genotyped_overall, " (", round(relatives_genotyped_overall / total_genotyped_overall * 100, 1), ")"),
paste0(num_relatives_carriers_female_overall, " (", round(num_relatives_carriers_female_overall / relatives_genotyped_overall * 100, 1), ")"),
paste0(num_relatives_carriers_male_overall, " (", round(num_relatives_carriers_male_overall / relatives_genotyped_overall * 100, 1), ")"),
paste0(total_carriers_overall, " (", round(total_carriers_overall / total_genotyped_overall * 100, 1), ")"),
ovarian_cases_total_overall,
paste0(ovarian_cases_probands_overall, " (", round(ovarian_cases_probands_overall / num_probands_female_overall * 100, 1), ")"),
paste0(ovarian_cases_relatives_overall, " (", round(ovarian_cases_relatives_overall / num_relatives_female_overall * 100, 1), ")"),
paste0(oc_age_median_overall, " (", oc_age_min_overall, "--", oc_age_max_overall, ")")
),
stringsAsFactors = FALSE
)
### Add a Missingness Section for Age at Diagnosis (Affected Individuals Only) ###
# Filter the data to only those affected with ovarian cancer
affected <- dat %>% filter(isAffOC == 1)
# Compute the number of affected individuals with missing AgeOC
missing_age_oc_overall   <- sum(is.na(affected$AgeOC))
missing_age_oc_probands  <- sum(is.na(affected$AgeOC[affected$isProband == 1]))
missing_age_oc_relatives <- sum(is.na(affected$AgeOC[affected$isProband == 0]))
# Create a data frame with the missingness information
missingness_data <- data.frame(
Characteristic = c("Missing Age at Diagnosis Data (Affected Only)", " Overall", " Probands", " Relatives"),
Overall = c("", missing_age_oc_overall, missing_age_oc_probands, missing_age_oc_relatives),
stringsAsFactors = FALSE
)
# Append the missingness rows to the main table
table_data <- rbind(table_data, missingness_data)
# Print the main table in LaTeX format (Overall Only)
kable(table_data,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Characteristic", "Overall Count (\\%)"),
caption = "Demographic and Clinical Characteristics of the CCGCRN Dataset (Overall)") %>%
kable_styling(latex_options = c("hold_position"))
### Create a Race Breakdown Table for Probands Only ###
race_breakdown <- dat %>%
filter(isProband == 1) %>%
# Replace missing values in the 'Race' column with "Missing"
mutate(Race = ifelse(is.na(Race), "Missing", Race)) %>%
group_by(Race, .drop = FALSE) %>%
summarise(Count = n()) %>%
ungroup() %>%
mutate(Percent = round(Count / total_probands_individuals * 100, 1))
# Print the race breakdown table in LaTeX format
kable(race_breakdown,
format = "latex",
booktabs = TRUE,
escape = FALSE,
col.names = c("Race", "Count", "Percent"),
caption = "Race Breakdown for Probands in the Dataset (Total = 140)") %>%
kable_styling(latex_options = c("hold_position"))
